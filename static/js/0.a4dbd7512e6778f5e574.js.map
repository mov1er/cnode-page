{"version":3,"sources":["webpack:///static/js/0.a4dbd7512e6778f5e574.js","webpack:///./src/views/topic.vue","webpack:///./~/.0.10.3@util/support/isBufferBrowser.js","webpack:///./~/.0.10.3@util/util.js","webpack:///./~/.0.11.9@process/browser.js","webpack:///./src/views/topic.vue?c21d","webpack:///./src/views/topic.vue?193f","webpack:///./src/views/topic.vue?da71","webpack:///./~/.2.0.1@inherits/inherits_browser.js","webpack:///topic.vue","webpack:///./~/markdown/lib/index.js","webpack:///./~/markdown/lib/markdown.js"],"names":["webpackJsonp","15","module","exports","__webpack_require__","__vue_exports__","__vue_options__","__vue_template__","default","options","name","render","staticRenderFns","18","arg","copy","fill","readUInt8","19","global","process","inspect","obj","opts","ctx","seen","stylize","stylizeNoColor","arguments","length","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","str","styleType","style","styles","arrayToHash","array","hash","forEach","val","idx","value","recurseTimes","isFunction","constructor","prototype","ret","isString","primitive","formatPrimitive","keys","Object","visibleKeys","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","RegExp","toString","call","isDate","Date","base","braces","isArray","n","toUTCString","push","output","formatArray","map","key","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","replace","isNumber","isNull","Error","i","l","hasOwnProperty","String","match","desc","getOwnPropertyDescriptor","get","set","split","line","join","substr","numLinesEst","reduce","prev","cur","ar","Array","isNullOrUndefined","isSymbol","re","isObject","objectToString","d","e","isPrimitive","o","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","f","objects","args","len","x","Number","_","deprecate","fn","msg","deprecated","warned","throwDeprecation","traceDeprecation","console","trace","error","apply","this","noDeprecation","debugEnviron","debugs","debuglog","NODE_ENV","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isBuffer","log","inherits","origin","add","20","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","21","id","sources","names","mappings","file","sourcesContent","sourceRoot","29","content","locals","40","_vm","_h","$createElement","_c","_self","staticClass","attrs","theme","_v","domProps","textContent","_s","topic","label","collected","primary","secondary","click","collect","grow","to","params","loginname","author","src","avatar_url","getTabInfo","tab","good","top","_f","create_at","visit_count","innerHTML","reply_count","_l","reply","$event","replyTo","slot","ups","class","uped","isUped","upTo","directives","rawName","userId","curReplyId","expression","multiLine","rows","rowsMax","maxLength","fullWidth","input","replyContTo","replyAct","hintText","replyCont","_e","page","success","alt","message","successTxt","51","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","62","_interopRequireDefault","__esModule","defineProperty","_webpackZepto","_webpackZepto2","_mhead","_mhead2","_toTop","_toTop2","_filters","markdown","components","mhead","totop","filters","getTimeStr","data","topicId","token","authorTxt","toast","mounted","_this","$route","$store","state","user","userInfo","methods","isClass","$router","redirect","encodeURIComponent","path","_this2","postData","accesstoken","htmlText","reply_id","ajax","type","url","dataType","res","toastTimer","history","go","parse","responseText","error_msg","_this3","action","index","inArray","splice","alert","69","toHTML","70","expose","mk_block_toSource","uneval","trailing","lineNumber","mk_block_inspect","util","count_lines","strong_em","tag","md","CloseTag","len_after","state_slot","other_slot","text","orig_match","shift","other","slice","unshift","processInline","last","consumed","split_meta_hash","meta_string","meta","parts","in_quotes","letter","extract_attr","jsonml","escapeHTML","render_tree","attributes","tag_attrs","a","convert_tree_to_html","tree","references","preprocessTreeNode","level","code","href","ref","original","merge_text_nodes","Markdown","dialect","dialects","Gruber","em_state","strong_state","debug_indent","source","toTree","toHTMLTree","renderJsonML","refs","html","mk_block","block","trail","s","toSource","split_blocks","startLine","m","blocks","line_no","exec","lastIndex","processBlock","next","cbs","ord","__order__","__call__","debug","inline","custom_root","old_tree","b","print","loop_re_over_block","cb","valueOf","atxHeader","header","setextHeader","block_search","substring","horizRule","lists","regex_for_depth","indent_re","any_list","expand_tab","li","loose","nl","add_to","what","is_str","get_contained_blocks","paragraphify","stack","list","last_li","sublist","bullet_list","is_list_re","make_list","indent","lines","li_accumulate","line_re","wanted_depth","Math","floor","found","contained","next_block","hr","blockquote","abutting","processedBlock","attr","isEmpty","referenceDefn","toLowerCase","para","__oneElement__","patterns_or_re","previous_nodes","__patterns__","patterns","out","]","}","__escape__","\\","charAt","![","[","link","orig","DialectHelpers","inline_until_char","children","open_parens","<","`","  \n","buildBlockOrder","buildInlinePatterns","pattern","want","nodes","subclassDialect","Block","Inline","Maruku","processMetaHash","document_meta","pairs","p","block_meta","node","result","definition_list","tight","terms","defns","table","_split_on_unescaped","ch","r","leading_pipe","no_leading_pipe","html_attrs","align","trim","row","html_row","matches","before","k","arr","thisp","root"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,GACA,SAASC,EAAQC,EAASC,GCHhC,GAAAC,GAAAC,CAIAF,GAAA,IAGAC,EAAAD,EAAA,GAGA,IAAAG,GAAAH,EAAA,GACAE,GAAAD,QAEA,gBAAAA,GAAAG,SACA,kBAAAH,GAAAG,UAEAF,EAAAD,IAAAG,SAEA,kBAAAF,KACAA,IAAAG,SAGA,mBAAAH,GAAAI,OACAJ,EAAAI,KAAA,SACCJ,EAAAK,OAAAJ,EAAAI,OACDL,EAAAM,gBAAAL,EAAAK,gBAEAV,EAAAC,QAAAE,GDUMQ,GACA,SAASX,EAAQC,GEtCvBD,EAAAC,QAAA,SAAAW,GACA,MAAAA,IAAA,gBAAAA,IACA,kBAAAA,GAAAC,MACA,kBAAAD,GAAAE,MACA,kBAAAF,GAAAG,YF6CMC,GACA,SAAShB,EAAQC,EAASC,IGlDhC,SAAAe,EAAAC,GA4HA,QAAAC,GAAAC,EAAAC,GAEA,GAAAC,IACAC,QACAC,QAAAC,EAkBA,OAfAC,WAAAC,QAAA,IAAAL,EAAAM,MAAAF,UAAA,IACAA,UAAAC,QAAA,IAAAL,EAAAO,OAAAH,UAAA,IACAI,EAAAT,GAEAC,EAAAS,WAAAV,EACGA,GAEHpB,EAAA+B,QAAAV,EAAAD,GAGAY,EAAAX,EAAAS,cAAAT,EAAAS,YAAA,GACAE,EAAAX,EAAAM,SAAAN,EAAAM,MAAA,GACAK,EAAAX,EAAAO,UAAAP,EAAAO,QAAA,GACAI,EAAAX,EAAAY,iBAAAZ,EAAAY,eAAA,GACAZ,EAAAO,SAAAP,EAAAE,QAAAW,GACAC,EAAAd,EAAAF,EAAAE,EAAAM,OAoCA,QAAAO,GAAAE,EAAAC,GACA,GAAAC,GAAApB,EAAAqB,OAAAF,EAEA,OAAAC,GACA,KAAApB,EAAAU,OAAAU,GAAA,OAAAF,EACA,KAAAlB,EAAAU,OAAAU,GAAA,OAEAF,EAKA,QAAAZ,GAAAY,EAAAC,GACA,MAAAD,GAIA,QAAAI,GAAAC,GACA,GAAAC,KAMA,OAJAD,GAAAE,QAAA,SAAAC,EAAAC,GACAH,EAAAE,IAAA,IAGAF,EAIA,QAAAP,GAAAd,EAAAyB,EAAAC,GAGA,GAAA1B,EAAAY,eACAa,GACAE,EAAAF,EAAA5B,UAEA4B,EAAA5B,UAAAlB,EAAAkB,WAEA4B,EAAAG,aAAAH,EAAAG,YAAAC,YAAAJ,GAAA,CACA,GAAAK,GAAAL,EAAA5B,QAAA6B,EAAA1B,EAIA,OAHA+B,GAAAD,KACAA,EAAAhB,EAAAd,EAAA8B,EAAAJ,IAEAI,EAIA,GAAAE,GAAAC,EAAAjC,EAAAyB,EACA,IAAAO,EACA,MAAAA,EAIA,IAAAE,GAAAC,OAAAD,KAAAT,GACAW,EAAAjB,EAAAe,EAQA,IANAlC,EAAAS,aACAyB,EAAAC,OAAAE,oBAAAZ,IAKAa,EAAAb,KACAS,EAAAK,QAAA,eAAAL,EAAAK,QAAA,mBACA,MAAAC,GAAAf,EAIA,QAAAS,EAAA7B,OAAA,CACA,GAAAsB,EAAAF,GAAA,CACA,GAAAvC,GAAAuC,EAAAvC,KAAA,KAAAuC,EAAAvC,KAAA,EACA,OAAAc,GAAAE,QAAA,YAAAhB,EAAA,eAEA,GAAAuD,EAAAhB,GACA,MAAAzB,GAAAE,QAAAwC,OAAAb,UAAAc,SAAAC,KAAAnB,GAAA,SAEA,IAAAoB,EAAApB,GACA,MAAAzB,GAAAE,QAAA4C,KAAAjB,UAAAc,SAAAC,KAAAnB,GAAA,OAEA,IAAAa,EAAAb,GACA,MAAAe,GAAAf,GAIA,GAAAsB,GAAA,GAAA3B,GAAA,EAAA4B,GAAA,IAA4C,IAS5C,IANAC,EAAAxB,KACAL,GAAA,EACA4B,GAAA,UAIArB,EAAAF,GAAA,CACA,GAAAyB,GAAAzB,EAAAvC,KAAA,KAAAuC,EAAAvC,KAAA,EACA6D,GAAA,aAAAG,EAAA,IAkBA,GAdAT,EAAAhB,KACAsB,EAAA,IAAAL,OAAAb,UAAAc,SAAAC,KAAAnB,IAIAoB,EAAApB,KACAsB,EAAA,IAAAD,KAAAjB,UAAAsB,YAAAP,KAAAnB,IAIAa,EAAAb,KACAsB,EAAA,IAAAP,EAAAf,IAGA,IAAAS,EAAA7B,UAAAe,GAAA,GAAAK,EAAApB,QACA,MAAA2C,GAAA,GAAAD,EAAAC,EAAA,EAGA,IAAAtB,EAAA,EACA,MAAAe,GAAAhB,GACAzB,EAAAE,QAAAwC,OAAAb,UAAAc,SAAAC,KAAAnB,GAAA,UAEAzB,EAAAE,QAAA,qBAIAF,GAAAC,KAAAmD,KAAA3B,EAEA,IAAA4B,EAWA,OATAA,GADAjC,EACAkC,EAAAtD,EAAAyB,EAAAC,EAAAU,EAAAF,GAEAA,EAAAqB,IAAA,SAAAC,GACA,MAAAC,GAAAzD,EAAAyB,EAAAC,EAAAU,EAAAoB,EAAApC,KAIApB,EAAAC,KAAAyD,MAEAC,EAAAN,EAAAN,EAAAC,GAIA,QAAAf,GAAAjC,EAAAyB,GACA,GAAAd,EAAAc,GACA,MAAAzB,GAAAE,QAAA,wBACA,IAAA6B,EAAAN,GAAA,CACA,GAAAmC,GAAA,IAAAC,KAAAC,UAAArC,GAAAsC,QAAA,aACAA,QAAA,YACAA,QAAA,eACA,OAAA/D,GAAAE,QAAA0D,EAAA,UAEA,MAAAI,GAAAvC,GACAzB,EAAAE,QAAA,GAAAuB,EAAA,UACAjB,EAAAiB,GACAzB,EAAAE,QAAA,GAAAuB,EAAA,WAEAwC,EAAAxC,GACAzB,EAAAE,QAAA,eADA,OAKA,QAAAsC,GAAAf,GACA,UAAAyC,MAAArC,UAAAc,SAAAC,KAAAnB,GAAA,IAIA,QAAA6B,GAAAtD,EAAAyB,EAAAC,EAAAU,EAAAF,GAEA,OADAmB,MACAc,EAAA,EAAAC,EAAA3C,EAAApB,OAAmC8D,EAAAC,IAAOD,EAC1CE,EAAA5C,EAAA6C,OAAAH,IACAd,EAAAD,KAAAK,EAAAzD,EAAAyB,EAAAC,EAAAU,EACAkC,OAAAH,IAAA,IAEAd,EAAAD,KAAA,GASA,OANAlB,GAAAZ,QAAA,SAAAkC,GACAA,EAAAe,MAAA,UACAlB,EAAAD,KAAAK,EAAAzD,EAAAyB,EAAAC,EAAAU,EACAoB,GAAA,MAGAH,EAIA,QAAAI,GAAAzD,EAAAyB,EAAAC,EAAAU,EAAAoB,EAAApC,GACA,GAAAlC,GAAA6B,EAAAyD,CAsCA,IArCAA,EAAArC,OAAAsC,yBAAAhD,EAAA+B,KAAyD/B,QAAA+B,IACzDgB,EAAAE,IAEA3D,EADAyD,EAAAG,IACA3E,EAAAE,QAAA,6BAEAF,EAAAE,QAAA,sBAGAsE,EAAAG,MACA5D,EAAAf,EAAAE,QAAA,uBAGAmE,EAAAjC,EAAAoB,KACAtE,EAAA,IAAAsE,EAAA,KAEAzC,IACAf,EAAAC,KAAAsC,QAAAiC,EAAA/C,OAAA,GAEAV,EADAkD,EAAAvC,GACAZ,EAAAd,EAAAwE,EAAA/C,MAAA,MAEAX,EAAAd,EAAAwE,EAAA/C,MAAAC,EAAA,GAEAX,EAAAwB,QAAA,WAEAxB,EADAK,EACAL,EAAA6D,MAAA,MAAArB,IAAA,SAAAsB,GACA,WAAAA,IACWC,KAAA,MAAAC,OAAA,GAEX,KAAAhE,EAAA6D,MAAA,MAAArB,IAAA,SAAAsB,GACA,YAAAA,IACWC,KAAA,QAIX/D,EAAAf,EAAAE,QAAA,yBAGAS,EAAAzB,GAAA,CACA,GAAAkC,GAAAoC,EAAAe,MAAA,SACA,MAAAxD,EAEA7B,GAAA2E,KAAAC,UAAA,GAAAN,GACAtE,EAAAqF,MAAA,iCACArF,IAAA6F,OAAA,EAAA7F,EAAAmB,OAAA,GACAnB,EAAAc,EAAAE,QAAAhB,EAAA,UAEAA,IAAA6E,QAAA,YACAA,QAAA,YACAA,QAAA,gBACA7E,EAAAc,EAAAE,QAAAhB,EAAA,WAIA,MAAAA,GAAA,KAAA6B,EAIA,QAAA4C,GAAAN,EAAAN,EAAAC,GACA,GAAAgC,GAAA,EACA3E,EAAAgD,EAAA4B,OAAA,SAAAC,EAAAC,GAGA,MAFAH,KACAG,EAAA5C,QAAA,UAAAyC,IACAE,EAAAC,EAAApB,QAAA,sBAAA1D,OAAA,GACG,EAEH,OAAAA,GAAA,GACA2C,EAAA,IACA,KAAAD,EAAA,GAAAA,EAAA,OACA,IACAM,EAAAyB,KAAA,SACA,IACA9B,EAAA,GAGAA,EAAA,GAAAD,EAAA,IAAAM,EAAAyB,KAAA,UAAA9B,EAAA,GAMA,QAAAC,GAAAmC,GACA,MAAAC,OAAApC,QAAAmC,GAIA,QAAA5E,GAAAlB,GACA,uBAAAA,GAIA,QAAA2E,GAAA3E,GACA,cAAAA,EAIA,QAAAgG,GAAAhG,GACA,aAAAA,EAIA,QAAA0E,GAAA1E,GACA,sBAAAA,GAIA,QAAAyC,GAAAzC,GACA,sBAAAA,GAIA,QAAAiG,GAAAjG,GACA,sBAAAA,GAIA,QAAAqB,GAAArB,GACA,gBAAAA,EAIA,QAAAmD,GAAA+C,GACA,MAAAC,GAAAD,IAAA,oBAAAE,EAAAF,GAIA,QAAAC,GAAAnG,GACA,sBAAAA,IAAA,OAAAA,EAIA,QAAAuD,GAAA8C,GACA,MAAAF,GAAAE,IAAA,kBAAAD,EAAAC,GAIA,QAAArD,GAAAsD,GACA,MAAAH,GAAAG,KACA,mBAAAF,EAAAE,gBAAA1B,QAIA,QAAAvC,GAAArC,GACA,wBAAAA,GAIA,QAAAuG,GAAAvG,GACA,cAAAA,GACA,iBAAAA,IACA,gBAAAA,IACA,gBAAAA,IACA,gBAAAA,IACA,mBAAAA,GAMA,QAAAoG,GAAAI,GACA,MAAA3D,QAAAN,UAAAc,SAAAC,KAAAkD,GAIA,QAAAC,GAAA7C,GACA,MAAAA,GAAA,OAAAA,EAAAP,SAAA,IAAAO,EAAAP,SAAA,IAQA,QAAAqD,KACA,GAAAL,GAAA,GAAA7C,MACAmD,GAAAF,EAAAJ,EAAAO,YACAH,EAAAJ,EAAAQ,cACAJ,EAAAJ,EAAAS,eAAAtB,KAAA,IACA,QAAAa,EAAAU,UAAAC,EAAAX,EAAAY,YAAAN,GAAAnB,KAAA,KAqCA,QAAAT,GAAAvE,EAAA0G,GACA,MAAArE,QAAAN,UAAAwC,eAAAzB,KAAA9C,EAAA0G,GAnjBA,GAAAC,GAAA,UACA9H,GAAA+H,OAAA,SAAAC,GACA,IAAA5E,EAAA4E,GAAA,CAEA,OADAC,MACAzC,EAAA,EAAmBA,EAAA/D,UAAAC,OAAsB8D,IACzCyC,EAAAxD,KAAAvD,EAAAO,UAAA+D,IAEA,OAAAyC,GAAA9B,KAAA,KAsBA,OAnBAX,GAAA,EACA0C,EAAAzG,UACA0G,EAAAD,EAAAxG,OACAU,EAAAuD,OAAAqC,GAAA5C,QAAA0C,EAAA,SAAAM,GACA,UAAAA,EAAA,SACA,IAAA5C,GAAA2C,EAAA,MAAAC,EACA,QAAAA,GACA,eAAAzC,QAAAuC,EAAA1C,KACA,gBAAA6C,QAAAH,EAAA1C,KACA,UACA,IACA,MAAAN,MAAAC,UAAA+C,EAAA1C,MACS,MAAA8C,GACT,mBAEA,QACA,MAAAF,MAGAA,EAAAF,EAAA1C,GAAuBA,EAAA2C,EAASC,EAAAF,IAAA1C,GAEhCpD,GADAkD,EAAA8C,KAAAtB,EAAAsB,GACA,IAAAA,EAEA,IAAAlH,EAAAkH,EAGA,OAAAhG,IAOApC,EAAAuI,UAAA,SAAAC,EAAAC,GAaA,QAAAC,KACA,IAAAC,EAAA,CACA,GAAA1H,EAAA2H,iBACA,SAAArD,OAAAkD,EACOxH,GAAA4H,iBACPC,QAAAC,MAAAN,GAEAK,QAAAE,MAAAP,GAEAE,GAAA,EAEA,MAAAH,GAAAS,MAAAC,KAAAzH,WAtBA,GAAAO,EAAAhB,EAAAC,SACA,kBACA,MAAAjB,GAAAuI,UAAAC,EAAAC,GAAAQ,MAAAC,KAAAzH,WAIA,IAAAR,EAAAkI,iBAAA,EACA,MAAAX,EAGA,IAAAG,IAAA,CAeA,OAAAD,GAIA,IACAU,GADAC,IAEArJ,GAAAsJ,SAAA,SAAAtD,GAIA,GAHAhE,EAAAoH,KACAA,GAAAG,SAAA,cAAAC,YAAA,IACAxD,IAAAyD,eACAJ,EAAArD,GACA,MAAAjC,QAAA,MAAAiC,EAAA,WAAA0D,KAAAN,GAAA,CACA,GAAAO,GAAA1I,EAAA0I,GACAN,GAAArD,GAAA,WACA,GAAAyC,GAAAzI,EAAA+H,OAAAkB,MAAAjJ,EAAAyB,UACAqH,SAAAE,MAAA,YAAAhD,EAAA2D,EAAAlB,QAGAY,GAAArD,GAAA,YAGA,OAAAqD,GAAArD,IAoCAhG,EAAAkB,UAIAA,EAAAU,QACAgI,MAAA,MACAC,QAAA,MACAC,WAAA,MACAC,SAAA,MACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OACAC,MAAA,OACAC,MAAA,OACAC,OAAA,OACAC,SAAA,OACAC,KAAA,OACAC,QAAA,QAIAtJ,EAAAqB,QACAkI,QAAA,OACAC,OAAA,SACAC,QAAA,SACAC,UAAA,OACAC,KAAA,OACAC,OAAA,QACAC,KAAA,UAEAC,OAAA,OAkRAhL,EAAAsE,UAKAtE,EAAA6B,YAKA7B,EAAAsF,SAKAtF,EAAA2G,oBAKA3G,EAAAqF,WAKArF,EAAAoD,WAKApD,EAAA4G,WAKA5G,EAAAgC,cAKAhC,EAAA8D,WAKA9D,EAAA8G,WAKA9G,EAAAkE,SAMAlE,EAAA2D,UAKA3D,EAAAgD,aAUAhD,EAAAkH,cAEAlH,EAAAiL,SAAAhL,EAAA,GAYA,IAAA0H,IAAA,sDACA,kBAaA3H,GAAAkL,IAAA,WACApC,QAAAoC,IAAA,UAAA7D,IAAArH,EAAA+H,OAAAkB,MAAAjJ,EAAAyB,aAiBAzB,EAAAmL,SAAAlL,EAAA,IAEAD,EAAA+B,QAAA,SAAAqJ,EAAAC,GAEA,IAAAA,IAAAvE,EAAAuE,GAAA,MAAAD,EAIA,KAFA,GAAA7H,GAAAC,OAAAD,KAAA8H,GACA7F,EAAAjC,EAAA7B,OACA8D,KACA4F,EAAA7H,EAAAiC,IAAA6F,EAAA9H,EAAAiC,GAEA,OAAA4F,MH2D8BnH,KAAKjE,EAAU,WAAa,MAAOkJ,SAAYjJ,EAAoB,MAI3FqL,GACA,SAASvL,EAAQC,GIznBvB,QAAAuL,KACA,SAAAhG,OAAA,mCAEA,QAAAiG,KACA,SAAAjG,OAAA,qCAsBA,QAAAkG,GAAAC,GACA,GAAAC,IAAAC,WAEA,MAAAA,YAAAF,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAAC,WAEA,MADAD,GAAAC,WACAA,WAAAF,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAzE,GACL,IAEA,MAAA0E,GAAA1H,KAAA,KAAAyH,EAAA,GACS,MAAAzE,GAET,MAAA0E,GAAA1H,KAAAiF,KAAAwC,EAAA,KAMA,QAAAG,GAAAC,GACA,GAAAC,IAAAC,aAEA,MAAAA,cAAAF,EAGA,KAAAC,IAAAP,IAAAO,IAAAC,aAEA,MADAD,GAAAC,aACAA,aAAAF,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAA7E,GACL,IAEA,MAAA8E,GAAA9H,KAAA,KAAA6H,GACS,MAAA7E,GAGT,MAAA8E,GAAA9H,KAAAiF,KAAA4C,KAYA,QAAAG,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAAzK,OACA0K,EAAAD,EAAAE,OAAAD,GAEAE,GAAA,EAEAF,EAAA1K,QACA6K,KAIA,QAAAA,KACA,IAAAL,EAAA,CAGA,GAAAM,GAAAf,EAAAQ,EACAC,IAAA,CAGA,KADA,GAAA/D,GAAAiE,EAAA1K,OACAyG,GAAA,CAGA,IAFAgE,EAAAC,EACAA,OACAE,EAAAnE,GACAgE,GACAA,EAAAG,GAAAG,KAGAH,IAAA,EACAnE,EAAAiE,EAAA1K,OAEAyK,EAAA,KACAD,GAAA,EACAL,EAAAW,IAiBA,QAAAE,GAAAhB,EAAAjJ,GACAyG,KAAAwC,MACAxC,KAAAzG,QAYA,QAAAkK,MAhKA,GAOAhB,GACAI,EARA9K,EAAAlB,EAAAC,YAgBA,WACA,IAEA2L,EADA,kBAAAC,YACAA,WAEAL,EAEK,MAAAtE,GACL0E,EAAAJ,EAEA,IAEAQ,EADA,kBAAAC,cACAA,aAEAR,EAEK,MAAAvE,GACL8E,EAAAP,KAuDA,IAEAW,GAFAC,KACAF,GAAA,EAEAI,GAAA,CAyCArL,GAAA2L,SAAA,SAAAlB,GACA,GAAAxD,GAAA,GAAAxB,OAAAjF,UAAAC,OAAA,EACA,IAAAD,UAAAC,OAAA,EACA,OAAA8D,GAAA,EAAuBA,EAAA/D,UAAAC,OAAsB8D,IAC7C0C,EAAA1C,EAAA,GAAA/D,UAAA+D,EAGA4G,GAAA3H,KAAA,GAAAiI,GAAAhB,EAAAxD,IACA,IAAAkE,EAAA1K,QAAAwK,GACAT,EAAAc,IASAG,EAAAxJ,UAAAuJ,IAAA,WACAvD,KAAAwC,IAAAzC,MAAA,KAAAC,KAAAzG,QAEAxB,EAAA4L,MAAA,UACA5L,EAAA6L,SAAA,EACA7L,EAAA8L,OACA9L,EAAA+L,QACA/L,EAAAgM,QAAA,GACAhM,EAAAiM,YAIAjM,EAAAkM,GAAAR,EACA1L,EAAAmM,YAAAT,EACA1L,EAAAoM,KAAAV,EACA1L,EAAAqM,IAAAX,EACA1L,EAAAsM,eAAAZ,EACA1L,EAAAuM,mBAAAb,EACA1L,EAAAwM,KAAAd,EAEA1L,EAAAyM,QAAA,SAAAnN,GACA,SAAAgF,OAAA,qCAGAtE,EAAA0M,IAAA,WAA2B,WAC3B1M,EAAA2M,MAAA,SAAAC,GACA,SAAAtI,OAAA,mCAEAtE,EAAA6M,MAAA,WAA4B,WJ2oBtBC,GACA,SAAShO,EAAQC,EAASC,GK/zBhCD,EAAAD,EAAAC,QAAAC,EAAA,KAKAD,EAAAyE,MAAA1E,EAAAiO,GAAA,2oBAAkqB,IAAQf,QAAA,EAAAgB,SAAA,0BAAAC,SAAAC,SAAA,4bAAAC,KAAA,YAAAC,gBAAA,s1BAAy3CC,WAAA,iBLw0B7hEC,GACA,SAASxO,EAAQC,EAASC,GM30BhC,GAAAuO,GAAAvO,EAAA,GACA,iBAAAuO,SAAAzO,EAAAiO,GAAAQ,EAAA,KAEAvO,GAAA,GAAAuO,KACAA,GAAAC,SAAA1O,EAAAC,QAAAwO,EAAAC,SNi2BMC,GACA,SAAS3O,EAAQC,EAASC,GOz2BhCF,EAAAC,SAAgBQ,OAAA,WAAmB,GAAAmO,GAAAzF,KAAa0F,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,CAC1E,OAAAE,GAAA,OACAE,YAAA,UACGF,EAAA,SACHG,OACAC,MAAA,QAEGP,EAAAQ,GAAA,KAAAR,EAAA,QAAAG,EAAA,OACHE,YAAA,SACGF,EAAA,MACHE,YAAA,sBACAI,UACAC,YAAAV,EAAAW,GAAAX,EAAAY,MAAA1C,UAEG8B,EAAAQ,GAAA,KAAAL,EAAA,OAAAA,EAAA,oBACHE,YAAA,qBACAC,OACAO,MAAAb,EAAAc,UAAA,YACAC,SAAAf,EAAAc,UACAE,UAAAhB,EAAAc,WAEAtC,IACAyC,MAAAjB,EAAAkB,YAEG,GAAAlB,EAAAQ,GAAA,KAAAL,EAAA,cACHE,YAAA,YACGF,EAAA,mBACHE,YAAA,YACAC,OACAa,KAAA,OAEGhB,EAAA,eACHG,OACAc,IACAxP,KAAA,OACAyP,QACAC,UAAAtB,EAAAY,MAAAW,OAAAD,eAIGnB,EAAA,aACHG,OACAkB,IAAAxB,EAAAY,MAAAW,OAAAE,eAEG,OAAAzB,EAAAQ,GAAA,KAAAL,EAAA,mBACHE,YAAA,YACAC,OACAa,KAAA,OAEGhB,EAAA,cAAAA,EAAA,mBACHE,YAAA,YACAC,OACAa,KAAA,OAEGnB,EAAAQ,GAAA,mBAAAR,EAAAW,GAAAX,EAAAY,MAAAW,OAAAD,WAAA,oBAAAtB,EAAAQ,GAAA,KAAAL,EAAA,mBACHE,YAAA,gBACAC,OACAa,KAAA,IACAjD,MAAA8B,EAAA0B,WAAA1B,EAAAY,MAAAe,IAAA3B,EAAAY,MAAAgB,KAAA5B,EAAAY,MAAAiB,KAAA,OAEG,GAAA7B,EAAAQ,GAAA,KAAAL,EAAA,cAAAA,EAAA,mBACHE,YAAA,YACAC,OACAa,KAAA,OAEGnB,EAAAQ,GAAA,uBAAAR,EAAAW,GAAAX,EAAA8B,GAAA,cAAA9B,EAAAY,MAAAmB,YAAA,oBAAA/B,EAAAQ,GAAA,KAAAL,EAAA,mBACHE,YAAA,YACAC,OACAa,KAAA,OAEGnB,EAAAQ,GAAA,iBAAAR,EAAAW,GAAAX,EAAAY,MAAAoB,aAAA,mCAAAhC,EAAAQ,GAAA,KAAAL,EAAA,WACHE,YAAA,kBACAI,UACAwB,UAAAjC,EAAAW,GAAAX,EAAAY,MAAAf,YAEGG,EAAAQ,GAAA,KAAAL,EAAA,cAAAH,EAAAQ,GAAA,KAAAL,EAAA,WACHE,YAAA,sBACGL,EAAAQ,GAAA,gBAAAL,EAAA,QACHE,YAAA,SACGL,EAAAQ,GAAAR,EAAAW,GAAAX,EAAAY,MAAAsB,aAAA,OAAAlC,EAAAQ,GAAA,kBAAAR,EAAAQ,GAAA,KAAAL,EAAA,cAAAH,EAAAQ,GAAA,KAAAL,EAAA,WACHE,YAAA,WACGL,EAAAmC,GAAAnC,EAAAY,MAAA,iBAAAwB,GACH,OAAAjC,EAAA,cACAE,YAAA,YACKF,EAAA,mBACLE,YAAA,YACAC,OACAa,KAAA,OAEKhB,EAAA,eACLG,OACAc,IACAxP,KAAA,OACAyP,QACAC,UAAAc,EAAAb,OAAAD,eAIKnB,EAAA,aACLG,OACAkB,IAAAY,EAAAb,OAAAE,eAEK,OAAAzB,EAAAQ,GAAA,KAAAL,EAAA,mBACLE,YAAA,YACAC,OACAa,KAAA,OAEKhB,EAAA,cAAAA,EAAA,mBACLE,YAAA,YACAC,OACAa,KAAA,OAEKnB,EAAAQ,GAAA,qBAAAR,EAAAW,GAAAyB,EAAAb,OAAAD,WAAA,QAAAtB,EAAAW,GAAAX,EAAA8B,GAAA,cAAAM,EAAAL,YAAA,wBAAA/B,EAAAQ,GAAA,KAAAL,EAAA,mBACLE,YAAA,YACAC,OACAa,KAAA,OAEKhB,EAAA,QACLE,YAAA,QACA7B,IACAyC,MAAA,SAAAoB,GACArC,EAAAsC,QAAAF,OAGKjC,EAAA,WACLG,OACAnM,MAAA,SAEAoO,KAAA,UACK,GAAAvC,EAAAQ,GAAA,KAAAL,EAAA,QACLE,YAAA,UACKL,EAAAQ,GAAAR,EAAAW,GAAAyB,EAAAI,IAAAzP,WAAAiN,EAAAQ,GAAA,KAAAL,EAAA,QACLE,YAAA,QACAoC,OACAC,KAAA1C,EAAA2C,OAAAP,EAAAI,MAEAhE,IACAyC,MAAA,SAAAoB,GACArC,EAAA4C,KAAAR,OAGKjC,EAAA,WACLG,OACAnM,MAAA,YAEAoO,KAAA,UACK,iBAAAvC,EAAAQ,GAAA,KAAAL,EAAA,OACLE,YAAA,YACAI,UACAwB,UAAAjC,EAAAW,GAAAyB,EAAAvC,YAEKG,EAAAQ,GAAA,KAAAL,EAAA,WACL0C,aACAjR,KAAA,OACAkR,QAAA,SACA3O,MAAA6L,EAAA+C,QAAA/C,EAAAgD,aAAAZ,EAAA/C,GACA4D,WAAA,sCAEA5C,YAAA,YACKF,EAAA,iBACL0C,aACAjR,KAAA,QACAkR,QAAA,UACA3O,MAAA6L,EAAA,YACAiD,WAAA,gBAEA3C,OACA4C,UAAA,GACAC,KAAA,EACAC,QAAA,EACAC,UAAA,IACAC,UAAA,IAEA7C,UACAtM,MAAA6L,EAAA,aAEAxB,IACA+E,MAAA,SAAAlB,GACArC,EAAAwD,YAAAnB,MAGKrC,EAAAQ,GAAA,KAAAL,EAAA,oBACLE,YAAA,qBACAC,OACAO,MAAA,KACAyC,UAAA,GACAvC,QAAA,IAEAvC,IACAyC,MAAAjB,EAAAyD,aAEK,GAAAzD,EAAAQ,GAAA,KAAAL,EAAA,kBACF,GAAAH,EAAAQ,GAAA,KAAAR,EAAA,OAAAG,EAAA,WACHE,YAAA,YACGF,EAAA,iBACH0C,aACAjR,KAAA,QACAkR,QAAA,UACA3O,MAAA6L,EAAA,UACAiD,WAAA,cAEA3C,OACAoD,SAAA,OACAR,UAAA,GACAC,KAAA,EACAC,QAAA,EACAC,UAAA,IACAC,UAAA,IAEA7C,UACAtM,MAAA6L,EAAA,WAEAxB,IACA+E,MAAA,SAAAlB,GACArC,EAAA2D,UAAAtB,MAGGrC,EAAAQ,GAAA,KAAAL,EAAA,oBACHE,YAAA,qBACAC,OACAO,MAAA,KACAyC,UAAA,GACAvC,QAAA,IAEAvC,IACAyC,MAAAjB,EAAAyD,aAEG,GAAAzD,EAAA4D,KAAA5D,EAAAQ,GAAA,KAAAL,EAAA,SACHG,OACAuD,KAAA,YAEG,GAAA7D,EAAA4D,KAAA5D,EAAAQ,GAAA,KAAAR,EAAA8D,QAOA9D,EAAA4D,KAPAzD,EAAA,OACHE,YAAA,UACGF,EAAA,OACHG,OACAkB,IAAAlQ,EAAA,GACAyS,IAAA,QAEG/D,EAAAQ,GAAA,KAAAR,EAAA,MAAAG,EAAA,eACHG,OACA0D,QAAAhE,EAAAiE,cAEGjE,EAAA4D,MAAA,IACF9R,qBP+2BKoS,GACA,SAAS9S,EAAQC,GQnmCvB,kBAAAwD,QAAAsP,OAEA/S,EAAAC,QAAA,SAAA+S,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAA7P,UAAAM,OAAAsP,OAAAE,EAAA9P,WACAD,aACAH,MAAAiQ,EACAG,YAAA,EACAC,UAAA,EACAC,cAAA,MAMArT,EAAAC,QAAA,SAAA+S,EAAAC,GACAD,EAAAE,OAAAD,CACA,IAAAK,GAAA,YACAA,GAAAnQ,UAAA8P,EAAA9P,UACA6P,EAAA7P,UAAA,GAAAmQ,GACAN,EAAA7P,UAAAD,YAAA8P,IR4mCMO,GACA,SAASvT,EAAQC,EAASC,GAE/B,YAoBA,SAASsT,GAAuBpS,GAAO,MAAOA,IAAOA,EAAIqS,WAAarS,GAAQd,QAASc,GAlBvFqC,OAAOiQ,eAAezT,EAAS,cAC7B8C,OAAO,GSxiCV,IAAA4Q,GAAAzT,EAAA,GT6iCK0T,EAAiBJ,EAAuBG,GS5iC7CE,EAAA3T,EAAA,GTgjCK4T,EAAUN,EAAuBK,GS/iCtCE,EAAA7T,EAAA,GTmjCK8T,EAAUR,EAAuBO,GSljCtCE,EAAA/T,EAAA,EACAA,GAAA,IAEAgU,QTujCCjU,GAAQK,SACNE,KStjCH,MTujCG2T,YACEC,MAAON,EAAQxT,QSrjCpB+T,MAAAL,EAAA1T,STujCGgU,SACEC,WAAY,SAAoBhN,GAC9B,OAAO,EAAI0M,EAASM,YStjC3BhN,KTyjCGiN,KAAM,WACJ,OACEC,QStjCP,GTujCOjF,SACAkD,SStjCP,ETujCOf,OStjCP,GTujCOC,WStjCP,GTujCOW,UStjCP,GTujCOH,YStjCP,GTujCOsC,MStjCP,GACAC,UAAA,gETujCO9B,WStjCP,GTujCO+B,OStjCP,ETujCOlF,WSrjCP,ITwjCGmF,QAAS,WSrjCZ,GAAAC,GAAA3L,ITwjCKA,MAAKsL,QAAUtL,KAAK4L,OAAO9E,OSvjChChC,GTwjCK9E,KAAKwI,OAASxI,KAAK6L,OAAOC,MAAMC,KAAKC,SSvjC1CxD,OTwjCKxI,KAAKuL,MAAQvL,KAAK6L,OAAOC,MAAMC,KAAKC,SStjCzCT,MTwjCKd,EAAetT,QAAQ0F,IAAI,oCAAsCmD,KAAKsL,QAAS,SAAUxN,GACnFA,GAAKA,EAAEuN,OACTM,EAAMtF,MAAQvI,ESvjCvBuN,KTwjCSM,EAAMpC,SSvjCf,MT4jCG0C,SACE9E,WAAY,SAAoBC,EAAKC,EAAMC,EAAK4E,GAC9C,OAAO,EAAIpB,EAAS3D,YAAYC,EAAKC,EAAMC,ESvjClD4E,ITyjCKnE,QAAS,SAAiBF,GACnB7H,KAAKwI,QAQRxI,KAAKyI,WAAaZ,ESvjC3B/C,GTwjCS9E,KAAKiJ,YAAc,IAAMpB,EAAMb,OSvjCxCD,UAAA,KT+iCS/G,KAAKmM,QAAQ5Q,MACXlE,KSvjCX,QTwjCWyP,QACEsF,SAAUC,mBAAmBrM,KAAK4L,OSrjC/CU,UT6jCKpD,SAAU,WSvjCf,GAAAqD,GAAAvM,KT0jCWwM,GACFC,YAAazM,KSxjCtBuL,OT0jCWmB,EAAW1M,KSzjCtBwL,ST0jCWxL,MAAKyI,YACP+D,EAASG,SAAW3M,KSzjC7ByI,WT0jCS+D,EAASlH,QAAUtF,KAAKiJ,YAAc,QSzjC/CyD,GT2jCSF,EAASlH,QAAUtF,KAAKoJ,UAAY,QSzjC7CsD,ET2jCO9M,QAAQoC,ISxjCfwK,GT0jCO/B,EAAetT,QAAQyV,MACrBC,KSzjCT,OT0jCSC,IAAK,oCAAsC9M,KSzjCpDsL,QAAA,WT0jCSD,KSzjCTmB,ET0jCSO,SSzjCT,OT0jCSxD,QAAS,SAAiByD,GACpBA,EAAIzD,UACNgD,EAAOd,OSzjCpB,ET0jCac,EAAO7C,WSzjCpB,YT0jCiB6C,EAAOU,YAAYnK,aAAayJ,ESzjCjDU,YT0jCaV,EAAOU,WAAavK,WAAW,WAC7B6J,EAAOd,OSzjCtB,ET0jCeyB,QAAQC,GSzjCvB,IACA,OT4jCSrN,MAAO,QAASA,GAAMkN,GACpB,GAAIlN,GAAQ9D,KAAKoR,MAAMJ,ESzjClCK,aT0jCWd,GAAOd,OSzjClB,ET0jCWc,EAAO7C,WAAa5J,ESzjC/BwN,UT0jCef,EAAOU,YAAYnK,aAAayJ,ESzjC/CU,YT0jCWV,EAAOU,WAAavK,WAAW,WAC7B6J,EAAOd,OSzjCpB,ET0jCayB,QAAQC,GSzjCrB,IACA,ST6jCK9E,KAAM,SAAcR,GSzjCzB,GAAA0F,GAAAvN,IT4jCYA,MAAKwI,OAQRiC,EAAetT,QAAQyV,MACrBC,KS3jCX,OT4jCWC,IAAK,oCAAsCjF,ES3jCtD/C,GAAA,OT4jCWuG,MAAQoB,YAAazM,KS3jChCuL,OT4jCWwB,SS3jCX,OT4jCWxD,QAAS,SAAiByD,GACxB,GAAIA,EAAIzD,QACN,GAAmB,SAAfyD,EAAIQ,OS3jCvB,CT4jCiB,GAAIC,GAAQhD,EAAetT,QAAQuW,QAAQH,EAAO/E,OAAQX,ES3jC3EI,IT4jCiBJ,GAAMI,IAAI0F,OAAOF,ES3jClC,OT6jCiB5F,GAAMI,IAAI1M,KAAKgS,ES3jChC/E,ST+jCW1I,MAAO,QAASA,GAAMkN,GACpB,GAAIlN,GAAQ9D,KAAKoR,MAAMJ,ES3jCpCK,aT6jCa,OADAO,OAAM9N,ES3jCnBwN,YACA,KTkiCStN,KAAKmM,QAAQ5Q,MACXlE,KS3jCX,QT4jCWyP,QACEsF,SAAUC,mBAAmBrM,KAAK4L,OSzjC/CU,UTolCKlE,OAAQ,SAAgBH,GACtB,MAAOwC,GAAetT,QAAQuW,QAAQ1N,KAAKwI,OAAQP,IS3jC1D,GT6jCKtB,QAAS,WACP3G,KAAKuG,WAAavG,KS3jCzBuG,cTkkCMsH,GACA,SAAShX,EAAQC,EAASC,GU7yChCD,EAAAiU,SAAAhU,EAAA,IACAD,EAAAsW,MAAAtW,EAAAiU,SAAA+C,QVqzCMC,GACA,SAASlX,EAAQC,EAASC,IWjzChC,SAAAiX,GA8GA,QAAAC,KACA,4BACAC,OAAAlO,KAAAlF,YACA,KACAoT,OAAAlO,KAAAmO,UACA,KACAD,OAAAlO,KAAAoO,YACA,KAIA,QAAAC,KACA,GAAAC,GAAAvX,EAAA,GACA,6BACAuX,EAAAtW,QAAAgI,KAAAlF,YACA,KACAwT,EAAAtW,QAAAgI,KAAAmO,UACA,KACAG,EAAAtW,QAAAgI,KAAAoO,YACA,KAoBA,QAAAG,GAAArV,GAEA,IADA,GAAAmC,GAAA,EAAAiB,GAAA,GACAA,EAAApD,EAAAwB,QAAA,KAAA4B,EAAA,UAAAjB,GACA,OAAAA,GA+0BA,QAAAmT,GAAAC,EAAAC,GAKA,QAAAC,GAAA1P,GACAe,KAAA4O,UAAA3P,EACAe,KAAA3I,KAAA,SAAAqX,EALA,GAAAG,GAAAJ,EAAA,SACAK,EAAA,UAAAL,EAAA,yBAOA,iBAAAM,EAAAC,GAEA,GAAAhP,KAAA6O,GAAA,IAAAH,EAMA,MAHA1O,MAAA6O,GAAAI,SAGAF,EAAAvW,OAAA,GAAAmW,GAAAI,EAAAvW,OAAAkW,EAAAlW,QAIA,IAAA0W,GAAAlP,KAAA8O,GAAAK,QACArD,EAAA9L,KAAA6O,GAAAM,OAEAnP,MAAA6O,GAAAO,QAAAV,EAKA,IAAA1B,GAAAhN,KAAAqP,cAAAN,EAAA7R,OAAAwR,EAAAlW,SAGA8W,EAAAtC,IAAAxU,OAAA,EAIAwH,MAAA6O,GAAAI,OACA,IAAAK,YAAAX,GAAA,CACA3B,EAAAnR,KAEA,IAAA0T,GAAAR,EAAAvW,OAAA8W,EAAAV,SACA,QAAAW,GAAAd,GAAAtL,OAAA6J,IAQA,MAJAhN,MAAA8O,GAAAI,EACAlP,KAAA6O,GAAA/C,GAGA4C,EAAAlW,OAAAkW,IAsHA,QAAAc,GAAAC,GAKA,IAJA,GAAAC,GAAAD,EAAA1S,MAAA,IACA4S,GAAA,IACAC,GAAA,EAEAF,EAAAlX,QAAA,CACA,GAAAqX,GAAAH,EAAAT,OACA,QAAAY,GACA,QAEAD,EACAD,IAAAnX,OAAA,IAAAqX,EAIAF,EAAApU,KAAA,GAEA,MACA,SACA,QAEAqU,IACA,MACA,UAGAC,EAAAH,EAAAT,OACA,SACAU,IAAAnX,OAAA,IAAAqX,GAKA,MAAAF,GA+PA,QAAAG,GAAAC,GACA,MAAA3U,GAAA2U,IACAA,EAAAvX,OAAA,GACA,gBAAAuX,GAAA,KACA3U,EAAA2U,EAAA,IACAA,EAAA,GACArO,OA0CA,QAAAsO,GAAAjB,GACA,MAAAA,GAAA7S,QAAA,cACAA,QAAA,aACAA,QAAA,aACAA,QAAA,eACAA,QAAA,cAGA,QAAA+T,GAAAF,GAEA,mBAAAA,GACA,MAAAC,GAAAD,EAGA,IAAAtB,GAAAsB,EAAAd,QACAiB,KACA5K,IAMA,MAJAyK,EAAAvX,QAAA,gBAAAuX,GAAA,IAAAA,EAAA,YAAAvS,SACA0S,EAAAH,EAAAd,SAGAc,EAAAvX,QACA8M,EAAA/J,KAAA0U,EAAAF,EAAAd,SAGA,IAAAkB,GAAA,EACA,QAAAC,KAAAF,GACAC,GAAA,IAAAC,EAAA,KAAAJ,EAAAE,EAAAE,IAAA,GAIA,cAAA3B,GAAA,MAAAA,GAAA,MAAAA,EACA,IAAAA,EAAA0B,EAAA,KAGA,IAAA1B,EAAA0B,EAAA,IAAA7K,EAAArI,KAAA,SAAAwR,EAAA,IAIA,QAAA4B,GAAAC,EAAAC,EAAAnZ,GACA,GAAAkF,EACAlF,QAGA,IAAA2Y,GAAAO,EAAAnB,MAAA,EAEA,mBAAA/X,GAAAoZ,qBACAT,EAAA3Y,EAAAoZ,mBAAAT,EAAAQ,GAIA,IAAAxK,GAAA+J,EAAAC,EACA,IAAAhK,EAAA,CACAgK,EAAA,KACA,KAAAzT,IAAAyJ,GACAgK,EAAA,GAAAzT,GAAAyJ,EAAAzJ,EAEAyJ,GAAAgK,EAAA,GAIA,mBAAAA,GACA,MAAAA,EAIA,QAAAA,EAAA,IACA,aACAA,EAAA,OAAAA,EAAA,GAAAU,YACAV,GAAA,GAAAU,KACA,MACA,kBACAV,EAAA,OACA,MACA,kBACAA,EAAA,OACA,MACA,gBACAA,EAAA,OACA,MACA,YACAA,EAAA,MACA,MACA,gBACAA,EAAA,UACAhK,YAAAwK,UACA,MACA,kBACAR,EAAA,SACAzT,EAAAyJ,EAAA,GACA,IAAA2K,IAAA,OACAA,GAAAnV,KAAAwE,MAAA2Q,EAAAX,EAAApC,OAAArR,EAAAyT,EAAAvX,OAAA8D,IACAyT,EAAAzT,GAAAoU,CACA,MACA,kBACAX,EAAA,SACA,MACA,WACAA,EAAA,GAAA9I,IAAA8I,EAAA,GAAAY,WACAZ,GAAA,GAAAY,IACA,MACA,iBACAZ,EAAA,OACA,MACA,YACAA,EAAA,MACA,MACA,gBACAA,EAAA,MAGA,IAAAa,GAAAL,EAAAxK,EAAA6K,IAGA,KAAAA,EAcA,MAAA7K,GAAA8K,eAbA9K,GAAA6K,IAGA7K,EAAA4K,KAAAC,EAAAD,KACAC,EAAAjN,QACAoC,EAAApC,MAAAiN,EAAAjN,aAIAoC,GAAA8K,QAMA,MACA,eACAd,EAAA,QAGA,IAAAa,GAAAL,EAAAxK,EAAA6K,IAGA,KAAAA,EAcA,MAAA7K,GAAA8K,eAbA9K,GAAA6K,IAGA7K,EAAAkB,IAAA2J,EAAAD,KACAC,EAAAjN,QACAoC,EAAApC,MAAAiN,EAAAjN,aAIAoC,GAAA8K,SAaA,GAHAvU,EAAA,EAGAyJ,EAAA,CAEA,OAAApK,KAAAoU,GAAA,IACAzT,EAAA,CACA,OAGA,IAAAA,GACAyT,EAAApC,OAAArR,EAAA,GAIA,KAASA,EAAAyT,EAAAvX,SAAmB8D,EAC5ByT,EAAAzT,GAAA+T,EAAAN,EAAAzT,GAAAiU,EAAAnZ,EAGA,OAAA2Y,GAKA,QAAAe,GAAAf,GAIA,IAFA,GAAAzT,GAAAwT,EAAAC,GAAA,IAEAzT,EAAAyT,EAAAvX,QAEA,gBAAAuX,GAAAzT,GACAA,EAAA,EAAAyT,EAAAvX,QAAA,gBAAAuX,GAAAzT,EAAA,GAEAyT,EAAAzT,IAAAyT,EAAApC,OAAArR,EAAA,UAGAA,GAKAwU,EAAAf,EAAAzT,MACAA,GA3oDA,GAAAyU,GAAA/C,EAAA+C,SAAA,SAAAC,GACA,aAAAA,IACA,gBACAhR,KAAAgR,QAAAD,EAAAE,SAAAC,MACA,MACA,cACAlR,KAAAgR,SACA,MACA,SACA,KAAAA,IAAAD,GAAAE,UAIA,SAAA5U,OAAA,6BAAAI,OAAAuU,GAAA,IAHAhR,MAAAgR,QAAAD,EAAAE,SAAAD,GAOAhR,KAAAmR,YACAnR,KAAAoR,gBACApR,KAAAqR,aAAA,GAUArD,GAAAZ,MAAA,SAAAkE,EAAAN,GAEA,GAAAtC,GAAA,GAAAqC,GAAAC,EACA,OAAAtC,GAAA6C,OAAAD,IAYAtD,EAAAF,OAAA,SAAAwD,EAAAN,EAAA5Z,GACA,GAAA4R,GAAAgF,EAAAwD,WAAAF,EAAAN,EAAA5Z,EAEA,OAAA4W,GAAAyD,aAAAzI,IAcAgF,EAAAwD,WAAA,SAAAxI,EAAAgI,EAAA5Z,GAEA,gBAAA4R,OAAAhJ,KAAAoN,MAAApE,EAAAgI,GAKA,IAAAjL,GAAA+J,EAAA9G,GACA0I,IAEA3L,MAAAwK,aACAmB,EAAA3L,EAAAwK,WAGA,IAAAoB,GAAAtB,EAAArH,EAAA0I,EAAAta,EAEA,OADA0Z,GAAAa,GACAA,EA2BA,IAAAC,GAAAb,EAAAa,SAAA,SAAAC,EAAAC,EAAA9U,GAEA,GAAAzE,UAAAC,SAAAsZ,EAAA,OAEA,IAAAC,GAAA,GAAAtV,QAAAoV,EASA,OARAE,GAAA5D,SAAA2D,EAEAC,EAAA/Z,QAAAqW,EACA0D,EAAAC,SAAA/D,EAEAvM,QAAA1E,IACA+U,EAAA3D,WAAApR,GAEA+U,EAUAhB,GAAA/W,UAAAiY,aAAA,SAAAjJ,EAAAkJ,GACAlJ,IAAA9M,QAAA,qBAGA,IAEAiW,GAFAxU,EAAA,oCACAyU,KAGAC,EAAA,CAQA,KANA,OAAAF,EAAA,WAAAG,KAAAtJ,MAEAqJ,GAAA9D,EAAA4D,EAAA,IACAxU,EAAA4U,UAAAJ,EAAA,GAAA3Z,QAGA,QAAA2Z,EAAAxU,EAAA2U,KAAAtJ,KACA,OAAAmJ,EAAA,KACAA,EAAA,QACAxU,EAAA4U,aAEAH,EAAA7W,KAAAqW,EAAAO,EAAA,GAAAA,EAAA,GAAAE,IACAA,GAAA9D,EAAA4D,EAAA,GAGA,OAAAC,IAwBArB,EAAA/W,UAAAwY,aAAA,SAAAX,EAAAY,GACA,GAAAC,GAAA1S,KAAAgR,QAAAa,MACAc,EAAAD,EAAAE,SAEA,gBAAAF,GACA,MAAAA,GAAAG,SAAA9X,KAAAiF,KAAA6R,EAAAY,EAGA,QAAAnW,GAAA,EAAkBA,EAAAqW,EAAAna,OAAgB8D,IAAA,CAElC,GAAA0Q,GAAA0F,EAAAC,EAAArW,IAAAvB,KAAAiF,KAAA6R,EAAAY,EACA,IAAAzF,EAKA,QAHA5R,EAAA4R,MAAAxU,OAAA,IAAA4C,EAAA4R,EAAA,MACAhN,KAAA8S,MAAAH,EAAArW,GAAA,gCAEA0Q,EAKA,UAGA+D,EAAA/W,UAAAqV,cAAA,SAAAwC,GACA,MAAA7R,MAAAgR,QAAA+B,OAAAF,SAAA9X,KAAAiF,KAAAvD,OAAAoV,KAUAd,EAAA/W,UAAAuX,OAAA,SAAAD,EAAA0B,GACA,GAAAZ,GAAAd,YAAA9T,OAAA8T,EAAAtR,KAAAiS,aAAAX,GAGA2B,EAAAjT,KAAAsQ,IACA,KAIA,IAHAtQ,KAAAsQ,KAAA0C,GAAAhT,KAAAsQ,OAAA,YAGA8B,EAAA5Z,QAAA,CACA,GAAA0a,GAAAlT,KAAAwS,aAAAJ,EAAAnD,QAAAmD,EAGAc,GAAA1a,QAEAwH,KAAAsQ,KAAA/U,KAAAwE,MAAAC,KAAAsQ,KAAA4C,GAEA,MAAAlT,MAAAsQ,KAEA,QACA0C,IACAhT,KAAAsQ,KAAA2C,KAMAlC,EAAA/W,UAAA8Y,MAAA,WACA,GAAA9T,GAAAxB,MAAAxD,UAAAmV,MAAApU,KAAAxC,UACAyG,GAAAoQ,QAAApP,KAAAqR,cACA,mBAAA8B,QACAA,MAAApT,MAAAoT,MAAAnU,GACA,mBAAAY,UAAA,mBAAAA,SAAAoC,KACApC,QAAAoC,IAAAjC,MAAA,KAAAf,IAGA+R,EAAA/W,UAAAoZ,mBAAA,SAAAzV,EAAAkU,EAAAwB,GAKA,IAHA,GAAAlB,GACAe,EAAArB,EAAAyB,UAEAJ,EAAA1a,QAAA,OAAA2Z,EAAAxU,EAAA2U,KAAAY,KACAA,IAAAhW,OAAAiV,EAAA,GAAA3Z,QACA6a,EAAAtY,KAAAiF,KAAAmS,EAEA,OAAAe,IAQAnC,EAAAE,YAUAF,EAAAE,SAAAC,QACAW,OACA0B,UAAA,SAAA1B,EAAAY,GACA,GAAAN,GAAAN,EAAAnV,MAAA,oCAEA,IAAAyV,EAAA,CAEA,GAAAqB,IAAA,UAAgC/C,MAAA0B,EAAA,GAAA3Z,QAMhC,OALAgF,OAAAxD,UAAAuB,KAAAwE,MAAAyT,EAAAxT,KAAAqP,cAAA8C,EAAA,KAEAA,EAAA,GAAA3Z,OAAAqZ,EAAArZ,QACAia,EAAArD,QAAAwC,EAAAC,EAAA3U,OAAAiV,EAAA,GAAA3Z,QAAAqZ,EAAA1D,SAAA0D,EAAAzD,WAAA,KAEAoF,KAGAC,aAAA,SAAA5B,EAAAY,GACA,GAAAN,GAAAN,EAAAnV,MAAA,6BAEA,IAAAyV,EAAA,CAEA,GAAA1B,GAAA,MAAA0B,EAAA,OACAqB,GAAA,UAAgC/C,SAAgB0B,EAAA,GAKhD,OAHAA,GAAA,GAAA3Z,OAAAqZ,EAAArZ,QACAia,EAAArD,QAAAwC,EAAAC,EAAA3U,OAAAiV,EAAA,GAAA3Z,QAAAqZ,EAAA1D,SAAA0D,EAAAzD,WAAA,KAEAoF,KAGA9C,KAAA,SAAAmB,EAAAY,GAOA,GAAAxY,MACA0D,EAAA,2BAIA,IAAAkU,EAAAnV,MAAAiB,GAAA,CAEA+V,EACA,QAEA,GAAAR,GAAAlT,KAAAoT,mBACAzV,EAAAkU,EAAAyB,UAAA,SAAAnB,GAAsDlY,EAAAsB,KAAA4W,EAAA,KAEtD,IAAAe,EAAA1a,OAAA,CAEAia,EAAArD,QAAAwC,EAAAsB,EAAArB,EAAA1D,UACA,MAAAuF,GAEA,IAAAjB,EAAAja,OAUA,KAAAkb,EARA,KAAAjB,EAAA,GAAA/V,MAAAiB,GAAA,KAAA+V,EAGAzZ,GAAAsB,KAAAsW,EAAA1D,SAAAjS,QAAA,aAAAyX,UAAA,IAEA9B,EAAAY,EAAAxD,QAOA,qBAAAhV,EAAAgD,KAAA,UAGA2W,UAAA,SAAA/B,EAAAY,GAEA,GAAAN,GAAAN,EAAAnV,MAAA,yEAEA,IAAAyV,EAAA,CAIA,GAAApC,KAAA,MAYA,OATAoC,GAAA,IACApC,EAAAX,QAAArP,MAAAgQ,EAAA/P,KAAAwS,aAAAL,EAAA,QAIAA,EAAA,IACAM,EAAArD,QAAAwC,EAAAO,EAAA,KAGApC,IAoBA8D,MAAA,WAWA,QAAAC,GAAArb,GAEA,UAAAoC,QAEA,QAAAkZ,EAAA,MAAkCtb,EAAA,YAAsBub,EAAA,YAExDD,EAAA,OAA+Btb,EAAA,iBAG/B,QAAAwb,GAAAjL,GACA,MAAAA,GAAA9M,QAAA,YAAqC,QAKrC,QAAAiG,GAAA+R,EAAAC,EAAApB,EAAAqB,GACA,GAAAD,EAEA,WADAD,GAAA3Y,MAAA,QAAA4H,OAAA4P,GAIA,IAAAsB,GAAAH,IAAA1b,OAAA,YAAAgF,QAAA,QAAA0W,IAAA1b,OAAA,MACA0b,IAAA1b,OAAA,GACA0b,CAGAE,IAAAF,EAAA1b,OAAA,GAAAua,EAAA3D,QAAAgF,EAEA,QAAA9X,GAAA,EAAwBA,EAAAyW,EAAAva,OAAmB8D,IAAA,CAC3C,GAAAgY,GAAAvB,EAAAzW,GACAiY,EAAA,gBAAAD,EACAC,IAAAF,EAAA7b,OAAA,mBAAA6b,KAAA7b,OAAA,GACA6b,IAAA7b,OAAA,IAAA8b,EAGAD,EAAA9Y,KAAA+Y,IAOA,QAAAE,GAAA/b,EAAA2Z,GAMA,IAJA,GAAAzU,GAAA,GAAA9C,QAAA,KAAAkZ,EAAA,IAAkDtb,EAAA,eAClDyD,EAAA,GAAArB,QAAA,IAAAkZ,EAAA,IAAqDtb,EAAA,IAAc,MACnEwB,KAEAmY,EAAA5Z,OAAA,GACAmF,EAAA2U,KAAAF,EAAA,KADA,CAEA,GAAAc,GAAAd,EAAAnD,QAEA/P,EAAAgU,EAAAhX,UAAA,GAEAjC,GAAAsB,KAAAqW,EAAA1S,EAAAgU,EAAA/E,SAAA+E,EAAA9E,aAMA,MAAAnU,GAIA,QAAAwa,GAAA1C,EAAAzV,EAAAoY,GACA,GAAAC,GAAA5C,EAAA4C,KACAC,EAAAD,IAAAnc,OAAA,EAEA,MAAAoc,EAAA,YAAApX,QAAA,QAAAoX,EAAA,OAGA,GAAAtY,EAAA,GAAAoY,EAAAlc,OAGAoc,EAAArZ,MAAA,QAAA4H,OAAAyR,EAAAjH,OAAA,EAAAiH,EAAApc,OAAA,SAEA,CACA,GAAAqc,GAAAD,EAAA/Y,KACA+Y,GAAArZ,MAAA,QAAA4H,OAAAyR,EAAAjH,OAAA,EAAAiH,EAAApc,OAAA,IAAAqc,IAvFA,GAAAb,GAAA,gBACAc,EAAA,QAGAC,EAAA,GAAAla,QAAA,aAA4CmZ,EAAA,WAC5CD,EAAA,oBAuFA,iBAAAlC,EAAAY,GAIA,QAAAuC,GAAA7C,GACA,GAAAwC,GAAAG,EAAAxC,KAAAH,EAAA,KACA,eACA,aAGA,OADAuC,GAAAnZ,MAAuBoZ,OAAAM,OAAA9C,EAAA,KACvBwC,EATA,GAAAxC,GAAAN,EAAAnV,MAAAqY,EACA,IAAA5C,EAAA,CAqBA,IATA,GAEAyC,GAGAtY,EALAoY,KACAC,EAAAK,EAAA7C,GAEAgC,GAAA,EACAla,GAAAya,EAAA,GAAAC,QAKA,CAUA,OARAO,GAAArD,EAAA9U,MAAA,UAIAoY,EAAA,GAIA9C,EAAA,EAAgCA,EAAA6C,EAAA1c,OAAwB6Z,IAAA,CACxD,GAAA+B,GAAA,GACA7X,EAAA2Y,EAAA7C,GAAAnW,QAAA,eAAAb,GAAuE,MAAR+Y,GAAA/Y,EAAQ,KAGvE+Z,EAAAtB,EAAAY,EAAAlc,OAMA,IAJA2Z,EAAA5V,EAAAG,MAAA0Y,GAIA1T,SAAAyQ,EAAA,IAEAgD,EAAA3c,SACA2J,EAAAyS,EAAAT,EAAAnU,KAAAqP,cAAA8F,GAAAf,GAEAD,GAAA,EACAgB,EAAA,IAGAhD,EAAA,GAAA8B,EAAA9B,EAAA,GACA,IAAAkD,GAAAC,KAAAC,MAAApD,EAAA,GAAA3Z,OAAA,IAEA,IAAA6c,EAAAX,EAAAlc,OAGAmc,EAAAK,EAAA7C,GACAyC,EAAArZ,KAAAoZ,GACAC,EAAAD,EAAA,oBAEA,CAKA,GAAAa,IAAA,CACA,KAAAlZ,EAAA,EAA4BA,EAAAoY,EAAAlc,OAAkB8D,IAC9C,GAAAoY,EAAApY,GAAA2Y,QAAA9C,EAAA,IACAwC,EAAAD,EAAApY,GAAAqY,KACAD,EAAA/G,OAAArR,EAAA,EAAAoY,EAAAlc,QAAA8D,EAAA,IACAkZ,GAAA,CACA,OAGAA,IAEAH,IACAA,GAAAX,EAAAlc,QACAkc,EAAA/G,OAAA0H,EAAAX,EAAAlc,OAAA6c,GAEAV,EAAAD,EAAAW,EAAA,GAAAV,OAKAA,EAAAK,EAAA7C,GACAyC,EAAArZ,KAAAoZ,KAKAC,GAAA,YACAD,EAAApZ,KAAAqZ,GAEAR,EAAA,GAIA7X,EAAA/D,OAAA2Z,EAAA,GAAA3Z,SACA2c,GAAAf,EAAA7X,EAAAW,OAAAiV,EAAA,GAAA3Z,SAIA2c,EAAA3c,SACA2J,EAAAyS,EAAAT,EAAAnU,KAAAqP,cAAA8F,GAAAf,GAEAD,GAAA,EACAgB,EAAA,GAKA,IAAAM,GAAAjB,EAAAE,EAAAlc,OAAAia,EAGAgD,GAAAjd,OAAA,IAEAiB,EAAAib,EAAAD,EAAAzU,MAEA4U,EAAArZ,KAAAwE,MAAA6U,EAAA5U,KAAAuR,OAAAkE,OAGA,IAAAC,GAAAjD,EAAA,IAAAA,EAAA,GAAAa,WAAA,EAEA,KAAAoC,EAAAhZ,MAAAqY,KAAAW,EAAAhZ,MAAA,MAiBA,KAhBAmV,GAAAY,EAAAxD,OAGA,IAAA0G,GAAA3V,KAAAgR,QAAAa,MAAA+B,UAAA/B,EAAAY,EAEA,IAAAkD,EAAA,CACA1b,EAAAsB,KAAAwE,MAAA9F,EAAA0b,EACA,OAIAlc,EAAAib,EAAAD,EAAAzU,MAEAmU,GAAA,EAMA,MAAAla,QAIA2b,WAAA,SAAA/D,EAAAY,GACA,GAAAZ,EAAAnV,MAAA,QAGA,GAAAqT,KAOA,SAAA8B,EAAA,IAMA,IALA,GAAAqD,GAAArD,EAAA9U,MAAA,MACAM,KACAgV,EAAAR,EAAAzD,WAGA8G,EAAA1c,QAAA,KAAA0c,EAAA,OACA7X,EAAA9B,KAAA2Z,EAAAjG,SACAoD,GAGA,IAAAwD,GAAAjE,EAAAvU,EAAAJ,KAAA,WAAA4U,EAAAzD,WACA2B,GAAAxU,KAAAwE,MAAAgQ,EAAA/P,KAAAwS,aAAAqD,OAEAhE,EAAAD,EAAAsD,EAAAjY,KAAA,MAAA4U,EAAA1D,SAAAkE,GAKA,KAAAI,EAAAja,QAAA,KAAAia,EAAA,QACA,GAAAS,GAAAT,EAAAxD,OACA4C,GAAAD,EAAAC,IAAA1D,SAAA+E,IAAA/E,SAAA0D,EAAAzD,YAIA,GAAApF,GAAA6I,EAAA3V,QAAA,aAEA4Z,GADA9V,KAAAsQ,KACAtQ,KAAAuR,OAAAvI,GAAA,gBACA+M,EAAAjG,EAAAgG,EAYA,OATAC,MAAAxF,mBACAwF,GAAAxF,WAEAyF,EAAAD,IACAD,EAAAnI,OAAA,MAIAoC,EAAAxU,KAAAua,GACA/F,IAGAkG,cAAA,SAAApE,EAAAY,GACA,GAAA9U,GAAA,8DAGA,IAAAkU,EAAAnV,MAAAiB,GAAA,CAIAmS,EAAA9P,KAAAsQ,OACAtQ,KAAAsQ,KAAA3C,OAAA,OAGA,IAAA5H,GAAA+J,EAAA9P,KAAAsQ,KAGA5O,UAAAqE,EAAAwK,aACAxK,EAAAwK,cAGA,IAAA2C,GAAAlT,KAAAoT,mBAAAzV,EAAAkU,EAAA,SAAAM,GAEAA,EAAA,SAAAA,EAAA,YAAAA,EAAA,GAAAA,EAAA,GAAA3Z,OAAA,KACA2Z,EAAA,GAAAA,EAAA,GAAAwB,UAAA,EAAAxB,EAAA,GAAA3Z,OAAA,GAEA,IAAAoY,GAAA7K,EAAAwK,WAAA4B,EAAA,GAAA+D,gBACAvF,KAAAwB,EAAA,GAGAzQ,UAAAyQ,EAAA,GACAvB,EAAAjN,MAAAwO,EAAA,GACAzQ,SAAAyQ,EAAA,KACAvB,EAAAjN,MAAAwO,EAAA,KAOA,OAHAe,GAAA1a,QACAia,EAAArD,QAAAwC,EAAAsB,EAAArB,EAAA1D,gBAKAgI,KAAA,SAAAtE,EAAAY,GAEA,gBAAAtP,OAAAnD,KAAAqP,cAAAwC,QAKAd,EAAAE,SAAAC,OAAA6B,QAEAqD,eAAA,SAAArH,EAAAsH,EAAAC,GACA,GAAAnE,GACAnF,CAGAqJ,MAAArW,KAAAgR,QAAA+B,OAAAwD,YACA,IAAA5Y,GAAA,GAAA9C,QAAA,iBAAAwb,EAAA/E,QAAA+E,GAAA,IAGA,IADAlE,EAAAxU,EAAA2U,KAAAvD,IACAoD,EAEA,OAAApD,EAAAvW,OAAAuW,EAEA,IAAAoD,EAAA,GAEA,OAAAA,EAAA,GAAA3Z,OAAA2Z,EAAA,GAGA,IAAAnF,EAQA,OAPAmF,GAAA,IAAAnS,MAAAgR,QAAA+B,SACA/F,EAAAhN,KAAAgR,QAAA+B,OAAAZ,EAAA,IAAApX,KACAiF,KACA+O,EAAA7R,OAAAiV,EAAA1E,OAAA0E,EAAAmE,QAGAtJ,MAAAmF,EAAA,GAAA3Z,OAAA2Z,EAAA,KAIAU,SAAA,SAAA9D,EAAAyH,GAKA,QAAArU,GAAAjD,GAEA,gBAAAA,IAAA,gBAAAuX,KAAAje,OAAA,GACAie,IAAAje,OAAA,IAAA0G,EAEAuX,EAAAlb,KAAA2D,GAGA,IAXA,GACA8N,GADAyJ,KAWA1H,EAAAvW,OAAA,GACAwU,EAAAhN,KAAAgR,QAAA+B,OAAAqD,eAAArb,KAAAiF,KAAA+O,EAAAyH,EAAAC,GACA1H,IAAA7R,OAAA8P,EAAAiC,SACAxV,EAAAuT,EAAA7K,EAGA,OAAAsU,IAKAC,IAAA,aACAC,IAAM,aAENC,WAAA,6BAEAC,KAAA,SAAA9H,GAGA,MAAA/O,MAAAgR,QAAA+B,OAAA6D,WAAAtE,KAAAvD,IACA,EAAAA,EAAA+H,OAAA,KAGA,SAGAC,KAAA,SAAAhI,GAOA,GAAAoD,GAAApD,EAAArS,MAAA,qEAEA,IAAAyV,EAAA,CACAA,EAAA,SAAAA,EAAA,YAAAA,EAAA,GAAAA,EAAA,GAAA3Z,OAAA,KACA2Z,EAAA,GAAAA,EAAA,GAAAwB,UAAA,EAAAxB,EAAA,GAAA3Z,OAAA,IAEA2Z,EAAA,GAAAnS,KAAAgR,QAAA+B,OAAAF,SAAA9X,KAAAiF,KAAAmS,EAAA,WAEA,IAAApM,IAAqByD,IAAA2I,EAAA,GAAAxB,KAAAwB,EAAA,OAIrB,OAHAzQ,UAAAyQ,EAAA,KACApM,EAAApC,MAAAwO,EAAA,KAEAA,EAAA,GAAA3Z,QAAA,MAAAuN,IAMA,MAFAoM,GAAApD,EAAArS,MAAA,8BAEAyV,GAGAA,EAAA,GAAA3Z,QAAA,WAA4CgR,IAAA2I,EAAA,GAAAvB,IAAAuB,EAAA,GAAA+D,cAAArF,SAAAsB,EAAA,OAI5C,SAGA6E,IAAA,QAAAC,GAAAlI,GAEA,GAAAmI,GAAAza,OAAAsS,GAEA/B,EAAA+D,EAAAoG,eAAAC,kBAAArc,KAAAiF,KAAA+O,EAAA7R,OAAA,OAGA,KAAA8P,EAAA,aAEA,IAEAiK,GACAlR,EAHAwJ,EAAA,EAAAvC,EAAA,GACAqK,EAAArK,EAAA,EAMA+B,KAAA7R,OAAAqS,EAQA,IAAA4C,GAAApD,EAAArS,MAAA,uDACA,IAAAyV,EAAA,CACA,GAAArF,GAAAqF,EAAA,EAOA,IANA5C,GAAA4C,EAAA,GAAA3Z,OAEAsU,GAAA,KAAAA,EAAA,SAAAA,IAAAtU,OAAA,KACAsU,IAAA6G,UAAA,EAAA7G,EAAAtU,OAAA,KAGA2Z,EAAA,GAEA,OADAmF,GAAA,EACArY,EAAA,EAA4BA,EAAA6N,EAAAtU,OAAkByG,IAC9C,OAAA6N,EAAA7N,IACA,QACAqY,GACA,MACA,SACA,KAAAA,IACA/H,GAAAzC,EAAAtU,OAAAyG,EACA6N,IAAA6G,UAAA,EAAA1U,IAeA,MAPA6N,GAAA9M,KAAAgR,QAAA+B,OAAAF,SAAA9X,KAAAiF,KAAA8M,EAAA,SAEA/G,GAAiB4K,KAAA7D,GAAA,IACjBpL,SAAAyQ,EAAA,KACApM,EAAApC,MAAAwO,EAAA,IAEA8E,GAAA,OAAAlR,GAAA5C,OAAAkU,IACA9H,EAAA0H,GAOA,MAFA9E,GAAApD,EAAArS,MAAA,iBAEAyV,GAEA5C,GAAA4C,EAAA,GAAA3Z,OAGAuN,GAAiB6K,KAAAuB,EAAA,IAAA1V,OAAA4a,IAAAnB,cAAArF,SAAAqG,EAAAha,OAAA,EAAAqS,IAEjB0H,GAAA,WAAAlR,GAAA5C,OAAAkU,IAKA9H,EAAA0H,IAKA,GAAAI,EAAA7e,QAAA,gBAAA6e,GAAA,IAEAtR,GAAiB6K,IAAAyG,EAAA,GAAAnB,cAAArF,SAAAqG,EAAAha,OAAA,EAAAqS,IACjB0H,GAAA,WAAAlR,EAAAsR,EAAA,KACA9H,EAAA0H,KAIA,QAIAM,IAAA,SAAAxI,GACA,GAAAoD,EAEA,eAAAA,EAAApD,EAAArS,MAAA,4DACAyV,EAAA,IACAA,EAAA,GAAA3Z,QAAA,QAA2CmY,KAAA,UAAAwB,EAAA,IAAyBA,EAAA,KAGpE,UAAAA,EAAA,IACAA,EAAA,GAAA3Z,QAAA,QAA2CmY,KAAAwB,EAAA,IAAaA,EAAA,GAAAjV,OAAA,UAAA1E,WAGxD2Z,EAAA,GAAA3Z,QAAA,QAA2CmY,KAAAwB,EAAA,IAAaA,EAAA,MAGxD,QAGAqF,IAAA,SAAAzI,GAGA,GAAAoD,GAAApD,EAAArS,MAAA,qBAEA,OAAAyV,MAAA,IACAA,EAAA,GAAA3Z,OAAA2Z,EAAA,GAAA3Z,QAAA,aAAA2Z,EAAA,MAGA,QAIAsF,OAAA,SAAA1I,GACA,0BA8DAgC,EAAAE,SAAAC,OAAA6B,OAAA,MAAAvE,EAAA,eACAuC,EAAAE,SAAAC,OAAA6B,OAAA,GAAAvE,EAAA,eACAuC,EAAAE,SAAAC,OAAA6B,OAAA,KAAAvE,EAAA,UACAuC,EAAAE,SAAAC,OAAA6B,OAAA,EAAAvE,EAAA,UAIAuC,EAAA2G,gBAAA,SAAA5Z,GACA,GAAA6U,KACA,QAAArW,KAAAwB,GACA,aAAAxB,GAAA,YAAAA,GACAqW,EAAApX,KAAAe,EAEAwB,GAAA8U,UAAAD,GAIA5B,EAAA4G,oBAAA,SAAA7Z,GACA,GAAA0Y,KAEA,QAAAla,KAAAwB,GAEA,IAAAxB,EAAAI,MAAA,aACA,GAAAH,GAAAD,EAAAJ,QAAA,uBAAyC,QACzCA,QAAA,WACAsa,GAAAjb,KAAA,GAAAe,EAAA9D,OAAA+D,EAAA,MAAAA,EAAA,KAGAia,IAAAvZ,KAAA,KACAa,EAAAyY,aAAAC,CAGA,IAAAlX,GAAAxB,EAAA+U,QACA/U,GAAA+U,SAAA,SAAA9D,EAAA6I,GACA,MAAAlW,SAAAkW,EACAtY,EAAAvE,KAAAiF,KAAA+O,EAAA6I,GAIAtY,EAAAvE,KAAAiF,KAAA+O,EAAAyH,KAKAzF,EAAAoG,kBACApG,EAAAoG,eAAAC,kBAAA,SAAArI,EAAA8I,GAIA,IAHA,GAAAtI,GAAA,EACAuI,OAEA,CACA,GAAA/I,EAAA+H,OAAAvH,IAAAsI,EAGA,MADAtI,MACAA,EAAAuI,EAGA,IAAAvI,GAAAR,EAAAvW,OAEA,WAGA,IAAAwU,GAAAhN,KAAAgR,QAAA+B,OAAAqD,eAAArb,KAAAiF,KAAA+O,EAAA7R,OAAAqS,GACAA,IAAAvC,EAAA,GAEA8K,EAAAvc,KAAAwE,MAAA+X,EAAA9K,EAAAmC,MAAA,MAKA4B,EAAAgH,gBAAA,SAAAja,GACA,QAAAka,MAEA,QAAAC,MAGA,MAJAD,GAAAhe,UAAA8D,EAAA+T,MAEAoG,EAAAje,UAAA8D,EAAAiV,QAEUlB,MAAA,GAAAmG,GAAAjF,OAAA,GAAAkF,KAGVlH,EAAA2G,gBAAA3G,EAAAE,SAAAC,OAAAW,OACAd,EAAA4G,oBAAA5G,EAAAE,SAAAC,OAAA6B,QAEAhC,EAAAE,SAAAiH,OAAAnH,EAAAgH,gBAAAhH,EAAAE,SAAAC,QAEAH,EAAAE,SAAAiH,OAAAC,gBAAA,SAAA1I,GAIA,OAHAC,GAAAF,EAAAC,GACAsG,KAEAzZ,EAAA,EAAkBA,EAAAoT,EAAAlX,SAAiB8D,EAEnC,QAAAkE,KAAAkP,EAAApT,IACAyZ,EAAAjR,GAAA4K,EAAApT,GAAAqX,UAAA,OAGA,UAAAnT,KAAAkP,EAAApT,IAEAyZ,EAAA,MACAA,EAAA,MAAAA,EAAA,MAAArG,EAAApT,GAAAJ,QAAA,SAGA6Z,EAAA,MAAArG,EAAApT,GAAAqX,UAAA,OAIA,SAAAnT,KAAAkP,EAAApT,IAAA,CACA,GAAAyV,GAAArC,EAAApT,GAAAS,MAAA,KACAgZ,GAAAhE,EAAA,IAAAA,EAAA,GAIA,MAAAgE,IAuCAhF,EAAAE,SAAAiH,OAAArG,MAAAuG,cAAA,SAAAvG,EAAAY,GAEA,KAAAZ,EAAAzD,WAAA,IAGAyD,EAAAnV,MAAA,0BAGAoT,EAAA9P,KAAAsQ,OACAtQ,KAAAsQ,KAAA3C,OAAA,OAGA,IAAA0K,GAAAxG,EAAA9U,MAAA,KACA,KAAAub,IAAAD,GAAA,CACA,GAAAlG,GAAAkG,EAAAC,GAAA5b,MAAA,kBACAf,EAAAwW,EAAA,GAAA+D,cACAtc,EAAAuY,EAAA,EAEAnS,MAAAsQ,KAAA,GAAA3U,GAAA/B,EAIA,WAGAmX,EAAAE,SAAAiH,OAAArG,MAAA0G,WAAA,SAAA1G,EAAAY,GAEA,GAAAN,GAAAN,EAAAnV,MAAA,4CACA,IAAAyV,EAAA,CAGA,GAEA3Y,GAFAuc,EAAA/V,KAAAgR,QAAAmH,gBAAAhG,EAAA,GAKA,SAAAA,EAAA,IACA,GAAAqG,GAAAxY,KAAAsQ,KAAAtQ,KAAAsQ,KAAA9X,OAAA,EAIA,IAHAgB,EAAAsW,EAAA0I,GAGA,gBAAAA,GAAA,MAGAhf,KACAA,KACAgf,EAAA7K,OAAA,IAAAnU,GAIA,KAAA4W,IAAA2F,GACAvc,EAAA4W,GAAA2F,EAAA3F,EAIA,UAIA,GAAA8C,GAAArB,EAAA3V,QAAA,YACAuc,EAAAzY,KAAAwS,aAAAU,KAGA1Z,GAAAsW,EAAA2I,EAAA,IACAjf,IACAA,KACAif,EAAA,GAAA9K,OAAA,IAAAnU,GAIA,KAAA4W,IAAA2F,GACAvc,EAAA4W,GAAA2F,EAAA3F,EAGA,OAAAqI,KAGA1H,EAAAE,SAAAiH,OAAArG,MAAA6G,gBAAA,SAAA7G,EAAAY,GAEA,GAEAnW,GAAA6V,EAFAwG,EAAA,mCACAhE,GAAA,KAIA,IAAAxC,EAAAN,EAAAnV,MAAAic,GAAA,CAGA,IADA,GAAAvG,IAAAP,GACAY,EAAAja,QAAAmgB,EAAArG,KAAAG,EAAA,KACAL,EAAA7W,KAAAkX,EAAAxD,QAGA,QAAAiE,GAAA,EAAoBA,EAAAd,EAAA5Z,SAAmB0a,EAAA,CACvC,GAAAf,GAAAC,EAAAc,GAAAxW,MAAAic,GACAC,EAAAzG,EAAA,GAAAjW,QAAA,UAAAa,MAAA,MACA8b,EAAA1G,EAAA,GAAApV,MAAA,SAIA,KAAAT,EAAA,EAAkBA,EAAAsc,EAAApgB,SAAkB8D,EACpCqY,EAAApZ,MAAA,KAAAqd,EAAAtc,IAGA,KAAAA,EAAA,EAAkBA,EAAAuc,EAAArgB,SAAkB8D,EAEpCqY,EAAApZ,MAAA,MAAA4H,OAAAnD,KAAAqP,cAAAwJ,EAAAvc,GAAAJ,QAAA,mBAQA,OAAAyY,KAMA5D,EAAAE,SAAAiH,OAAArG,MAAAiH,MAAA,QAAAA,GAAAjH,EAAAY,GAEA,GAiBAnW,GAAA6V,EAjBA4G,EAAA,SAAAhH,EAAAiH,GACAA,KAAA,MACAA,EAAAtc,MAAA,yBAA8Csc,EAAA,KAAAA,EAI9C,KAHA,GAEA7G,GAFAnF,KACAiM,EAAA,GAAApe,QAAA,oBAAAme,EAAA,OAAAA,EAAA,QAEA7G,EAAAJ,EAAArV,MAAAuc,IACAjM,EAAAzR,KAAA4W,EAAA,IACAJ,EAAAI,EAAA,EAGA,OADAnF,GAAAzR,KAAAwW,GACA/E,GAGAkM,EAAA,6EAEAC,EAAA;AAEA,GAAAhH,EAAAN,EAAAnV,MAAAwc,GAGA/G,EAAA,GAAAA,EAAA,GAAAjW,QAAA,mBACK,MAAAiW,EAAAN,EAAAnV,MAAAyc,IACL,MAGA,IAAAL,IAAA,mCAIA3G,GAAA,GAAAA,EAAA,GAAAjW,QAAA,aAAAa,MAAA,IAGA,IAAAqc,KAUA,KATA3f,EAAA0Y,EAAA,YAAAJ,GACAA,EAAArV,MAAA,eAAA0c,EAAA7d,MAA2D8d,MAAA,UAC3DtH,EAAArV,MAAA,eAAA0c,EAAA7d,MAA2D8d,MAAA,SAC3DtH,EAAArV,MAAA,gBAAA0c,EAAA7d,MAA2D8d,MAAA,WAC3DD,EAAA7d,WAIA4W,EAAA,GAAA4G,EAAA5G,EAAA,GAAAjW,QAAA,kBACAI,EAAA,EAAeA,EAAA6V,EAAA,GAAA3Z,OAAiB8D,IAChCwc,EAAA,MAAAvd,MAAA,KAAA6d,EAAA9c,QAAmD6G,OACnDnD,KAAAqP,cAAA8C,EAAA,GAAA7V,GAAAgd,SAaA,OATA7f,GAAA0Y,EAAA,GAAAjW,QAAA,eAAAa,MAAA,eAAAwc,GACA,GAAAC,IAAA,KAEA,KADAD,EAAAR,EAAAQ,EAAA,KACAjd,EAAA,EAAmBA,EAAAid,EAAA/gB,OAAgB8D,IACnCkd,EAAAje,MAAA,KAAA6d,EAAA9c,QAAoD6G,OAAAnD,KAAAqP,cAAAkK,EAAAjd,GAAAgd,SAEpDR,GAAA,GAAAvd,KAAAie,IACKxZ,OAEL8Y,IAGA/H,EAAAE,SAAAiH,OAAAnF,OAAA,MAAmC,SAAAhE,EAAA0K,EAAAhD,GACnC,IAAAA,EAAAje,OACA,cAIA,IAAAkhB,GAAAjD,IAAAje,OAAA,EAEA,oBAAAkhB,GACA,cAIA,IAAAvH,GAAApD,EAAArS,MAAA,gCAGA,KAAAyV,EACA,cAIA,IAAAzC,GAAA1P,KAAAgR,QAAAmH,gBAAAhG,EAAA,IACA4D,EAAAjG,EAAA4J,EAEA3D,KACAA,KACA2D,EAAA/L,OAAA,IAAAoI,GAGA,QAAA4D,KAAAjK,GACAqG,EAAA4D,GAAAjK,EAAAiK,EAIA,QAAAxH,EAAA,GAAA3Z,OAAA,KAGAuY,EAAAE,SAAAiH,OAAAnF,OAAA6D,WAAA,+BAEA7F,EAAA2G,gBAAA3G,EAAAE,SAAAiH,OAAArG,OACAd,EAAA4G,oBAAA5G,EAAAE,SAAAiH,OAAAnF,OAEA,IAIAtZ,GAJA2B,EAAAoC,MAAApC,SAAA,SAAAnD,GACA,wBAAAqC,OAAAN,UAAAc,SAAAC,KAAA9C,GAMAwB,GADA+D,MAAAxD,UAAAP,QACA,SAAAmgB,EAAAvG,EAAAwG,GACA,MAAAD,GAAAngB,QAAA4Z,EAAAwG,IAIA,SAAAD,EAAAvG,EAAAwG,GACA,OAAAvd,GAAA,EAAmBA,EAAAsd,EAAAphB,OAAgB8D,IACnC+W,EAAAtY,KAAA8e,GAAAD,IAAAtd,KAAAsd,GAKA,IAAA5D,GAAA,SAAA/d,GACA,OAAA0D,KAAA1D,GACA,GAAAuE,eAAAzB,KAAA9C,EAAA0D,GACA,QAIA,UA2BAqS,GAAAyD,aAAA,SAAA1B,EAAA3Y,GACAA,QAEAA,EAAA0iB,KAAA1iB,EAAA0iB,OAAA,CAEA,IAAAxU,KAEA,IAAAlO,EAAA0iB,KACAxU,EAAA/J,KAAA0U,EAAAF,QAQA,KALAA,EAAAd,SACAc,EAAAvX,QAAA,gBAAAuX,GAAA,IAAAA,EAAA,YAAAvS,QACAuS,EAAAd,QAGAc,EAAAvX,QACA8M,EAAA/J,KAAA0U,EAAAF,EAAAd,SAIA,OAAA3J,GAAArI,KAAA,UAiNC,WAMD,MAAAnG","file":"static/js/0.a4dbd7512e6778f5e574.js","sourcesContent":["webpackJsonp([0,7],{\n\n/***/ 15:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(29)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(62)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(40)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\tif(typeof __vue_options__.name === \"undefined\") {\n\t  __vue_options__.name = \"topic\"\n\t}__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ },\n\n/***/ 18:\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n\n/***/ 19:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = ({\"NODE_ENV\":\"production\"}).NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(18);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(51);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(20)))\n\n/***/ },\n\n/***/ 20:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 21:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".topic .right{float:right;margin-right:5px}.topic{font-family:microsoft yahei;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#2c3e50}.padding{padding:8px}.paddinglf{padding:0 8px}.topic .tab:before{width:50px;display:inline-block;border-radius:2px;text-align:center}.content blockquote{margin-left:10px;color:#777;padding:0 15px;border-left:4px solid #ddd}.content a{text-decoration:underline;word-break:break-all;display:inline-block}.topic img{width:100%}.reply .mu-icon{font-size:20px}.topic .uped{color:#03a9f4}.topic .tab{color:#fff}.topic .mu-raised-button{height:30px;min-width:20px;float:right;margin:0 8px 10px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/topic.vue\"],\"names\":[],\"mappings\":\"AACA,cACE,YAAa,AACb,gBAAkB,CACnB,AACD,OACE,4BAA+B,AAC/B,mCAAoC,AACpC,kCAAmC,AACnC,aAAe,CAChB,AACD,SACE,WAAc,CACf,AACD,WACE,aAAe,CAChB,AACD,mBACE,WAAY,AACZ,qBAAsB,AACtB,kBAAmB,AACnB,iBAAmB,CACpB,AACD,oBACE,iBAAkB,AAClB,WAAY,AACZ,eAAkB,AAClB,0BAA4B,CAC7B,AACD,WACE,0BAA2B,AAC3B,qBAAqB,AACrB,oBAAsB,CACvB,AACD,WACE,UAAY,CACb,AACD,gBACE,cAAgB,CACjB,AACD,aACE,aAAe,CAChB,AACD,YACE,UAAY,CACb,AACD,yBACE,YAAa,AACb,eAAgB,AAChB,YAAa,AACb,iBAAmB,CACpB\",\"file\":\"topic.vue\",\"sourcesContent\":[\"\\n.topic .right{\\n  float: right;\\n  margin-right: 5px;\\n}\\n.topic {\\n  font-family: 'microsoft yahei';\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  color: #2c3e50;\\n}\\n.padding{\\n  padding:  8px;\\n}\\n.paddinglf{\\n  padding: 0 8px;\\n}\\n.topic .tab:before{\\n  width: 50px;\\n  display: inline-block;\\n  border-radius: 2px;\\n  text-align: center;\\n}\\n.content blockquote{\\n  margin-left: 10px;\\n  color: #777;\\n  padding: 0px 15px;\\n  border-left: 4px solid #ddd;\\n}\\n.content a{\\n  text-decoration: underline;\\n  word-break:break-all;\\n  display: inline-block;\\n}\\n.topic img{\\n  width: 100%;\\n}\\n.reply .mu-icon{\\n  font-size: 20px;\\n}\\n.topic .uped{\\n  color: #03A9F4;\\n}\\n.topic .tab{\\n  color: #fff;\\n}\\n.topic .mu-raised-button{\\n  height: 30px;\\n  min-width: 20px;\\n  float: right;\\n  margin: 0 8px 10px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(21);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/.0.25.0@css-loader/index.js?sourceMap!./../../node_modules/.10.0.3@vue-loader/lib/style-rewriter.js?id=data-v-00aca402!./../../node_modules/.10.0.3@vue-loader/lib/selector.js?type=styles&index=0!./topic.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/.0.25.0@css-loader/index.js?sourceMap!./../../node_modules/.10.0.3@vue-loader/lib/style-rewriter.js?id=data-v-00aca402!./../../node_modules/.10.0.3@vue-loader/lib/selector.js?type=styles&index=0!./topic.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"topic\"\n\t  }, [_c('mhead', {\n\t    attrs: {\n\t      \"theme\": \"主题\"\n\t    }\n\t  }), _vm._v(\" \"), (_vm.success) ? _c('div', {\n\t    staticClass: \"pt56\"\n\t  }, [_c('h2', {\n\t    staticClass: \"topic-title padding\",\n\t    domProps: {\n\t      \"textContent\": _vm._s(_vm.topic.title)\n\t    }\n\t  }), _vm._v(\" \"), _c('div', [_c('mu-raised-button', {\n\t    staticClass: \"demo-raised-button\",\n\t    attrs: {\n\t      \"label\": _vm.collected ? '取消收藏' : '收藏',\n\t      \"primary\": !_vm.collected,\n\t      \"secondary\": _vm.collected\n\t    },\n\t    on: {\n\t      \"click\": _vm.collect\n\t    }\n\t  })], 1), _vm._v(\" \"), _c('mu-flexbox', {\n\t    staticClass: \"padding\"\n\t  }, [_c('mu-flexbox-item', {\n\t    staticClass: \"flex-demo\",\n\t    attrs: {\n\t      \"grow\": \"1\"\n\t    }\n\t  }, [_c('router-link', {\n\t    attrs: {\n\t      \"to\": {\n\t        name: 'user',\n\t        params: {\n\t          loginname: _vm.topic.author.loginname\n\t        }\n\t      }\n\t    }\n\t  }, [_c('mu-avatar', {\n\t    attrs: {\n\t      \"src\": _vm.topic.author.avatar_url\n\t    }\n\t  })], 1)], 1), _vm._v(\" \"), _c('mu-flexbox-item', {\n\t    staticClass: \"flex-demo\",\n\t    attrs: {\n\t      \"grow\": \"7\"\n\t    }\n\t  }, [_c('mu-flexbox', [_c('mu-flexbox-item', {\n\t    staticClass: \"flex-demo\",\n\t    attrs: {\n\t      \"grow\": \"1\"\n\t    }\n\t  }, [_vm._v(\"\\n              \" + _vm._s(_vm.topic.author.loginname) + \"\\n            \")]), _vm._v(\" \"), _c('mu-flexbox-item', {\n\t    staticClass: \"flex-demo tab\",\n\t    attrs: {\n\t      \"grow\": \"1\",\n\t      \"title\": _vm.getTabInfo(_vm.topic.tab, _vm.topic.good, _vm.topic.top, true)\n\t    }\n\t  })], 1), _vm._v(\" \"), _c('mu-flexbox', [_c('mu-flexbox-item', {\n\t    staticClass: \"flex-demo\",\n\t    attrs: {\n\t      \"grow\": \"1\"\n\t    }\n\t  }, [_vm._v(\"\\n              发布于 \" + _vm._s(_vm._f(\"getTimeStr\")(_vm.topic.create_at)) + \"\\n            \")]), _vm._v(\" \"), _c('mu-flexbox-item', {\n\t    staticClass: \"flex-demo\",\n\t    attrs: {\n\t      \"grow\": \"1\"\n\t    }\n\t  }, [_vm._v(\"\\n            \" + _vm._s(_vm.topic.visit_count) + \"次浏览\\n            \")])], 1)], 1)], 1), _vm._v(\" \"), _c('section', {\n\t    staticClass: \"padding content\",\n\t    domProps: {\n\t      \"innerHTML\": _vm._s(_vm.topic.content)\n\t    }\n\t  }), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('section', {\n\t    staticClass: \"allRepies padding\"\n\t  }, [_vm._v(\"\\n        共 \"), _c('span', {\n\t    staticClass: \"blue\"\n\t  }, [_vm._v(_vm._s(_vm.topic.reply_count) + \" \")]), _vm._v(\" 人回复\\n      \")]), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('section', {\n\t    staticClass: \"reply \"\n\t  }, [_vm._l((_vm.topic.replies), function(reply) {\n\t    return [_c('mu-flexbox', {\n\t      staticClass: \"padding\"\n\t    }, [_c('mu-flexbox-item', {\n\t      staticClass: \"flex-demo\",\n\t      attrs: {\n\t        \"grow\": \"1\"\n\t      }\n\t    }, [_c('router-link', {\n\t      attrs: {\n\t        \"to\": {\n\t          name: 'user',\n\t          params: {\n\t            loginname: reply.author.loginname\n\t          }\n\t        }\n\t      }\n\t    }, [_c('mu-avatar', {\n\t      attrs: {\n\t        \"src\": reply.author.avatar_url\n\t      }\n\t    })], 1)], 1), _vm._v(\" \"), _c('mu-flexbox-item', {\n\t      staticClass: \"flex-demo\",\n\t      attrs: {\n\t        \"grow\": \"7\"\n\t      }\n\t    }, [_c('mu-flexbox', [_c('mu-flexbox-item', {\n\t      staticClass: \"flex-demo\",\n\t      attrs: {\n\t        \"grow\": \"2\"\n\t      }\n\t    }, [_vm._v(\"\\n                \" + _vm._s(reply.author.loginname) + \" 发布于 \" + _vm._s(_vm._f(\"getTimeStr\")(reply.create_at)) + \"\\n                \")]), _vm._v(\" \"), _c('mu-flexbox-item', {\n\t      staticClass: \"flex-demo\",\n\t      attrs: {\n\t        \"grow\": \"1\"\n\t      }\n\t    }, [_c('span', {\n\t      staticClass: \"right\",\n\t      on: {\n\t        \"click\": function($event) {\n\t          _vm.replyTo(reply)\n\t        }\n\t      }\n\t    }, [_c('mu-icon', {\n\t      attrs: {\n\t        \"value\": \"reply\"\n\t      },\n\t      slot: \"left\"\n\t    })], 1), _vm._v(\" \"), _c('span', {\n\t      staticClass: \"right\"\n\t    }, [_vm._v(_vm._s(reply.ups.length))]), _vm._v(\" \"), _c('span', {\n\t      staticClass: \"right\",\n\t      class: {\n\t        'uped': _vm.isUped(reply.ups)\n\t      },\n\t      on: {\n\t        \"click\": function($event) {\n\t          _vm.upTo(reply)\n\t        }\n\t      }\n\t    }, [_c('mu-icon', {\n\t      attrs: {\n\t        \"value\": \"thumb_up\"\n\t      },\n\t      slot: \"left\"\n\t    })], 1)])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n\t      staticClass: \"paddinglf\",\n\t      domProps: {\n\t        \"innerHTML\": _vm._s(reply.content)\n\t      }\n\t    }), _vm._v(\" \"), _c('section', {\n\t      directives: [{\n\t        name: \"show\",\n\t        rawName: \"v-show\",\n\t        value: (_vm.userId && _vm.curReplyId === reply.id),\n\t        expression: \"userId && curReplyId === reply.id\"\n\t      }],\n\t      staticClass: \"padding\"\n\t    }, [_c('mu-text-field', {\n\t      directives: [{\n\t        name: \"model\",\n\t        rawName: \"v-model\",\n\t        value: (_vm.replyContTo),\n\t        expression: \"replyContTo\"\n\t      }],\n\t      attrs: {\n\t        \"multiLine\": \"\",\n\t        \"rows\": 6,\n\t        \"rowsMax\": 6,\n\t        \"maxLength\": 500,\n\t        \"fullWidth\": \"\"\n\t      },\n\t      domProps: {\n\t        \"value\": (_vm.replyContTo)\n\t      },\n\t      on: {\n\t        \"input\": function($event) {\n\t          _vm.replyContTo = $event\n\t        }\n\t      }\n\t    }), _vm._v(\" \"), _c('mu-raised-button', {\n\t      staticClass: \"demo-raised-button\",\n\t      attrs: {\n\t        \"label\": \"确认\",\n\t        \"fullWidth\": \"\",\n\t        \"primary\": \"\"\n\t      },\n\t      on: {\n\t        \"click\": _vm.replyAct\n\t      }\n\t    })], 1), _vm._v(\" \"), _c('mu-divider')]\n\t  })], 2), _vm._v(\" \"), (_vm.userId) ? _c('section', {\n\t    staticClass: \"padding\"\n\t  }, [_c('mu-text-field', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.replyCont),\n\t      expression: \"replyCont\"\n\t    }],\n\t    attrs: {\n\t      \"hintText\": \"回复内容\",\n\t      \"multiLine\": \"\",\n\t      \"rows\": 6,\n\t      \"rowsMax\": 6,\n\t      \"maxLength\": 500,\n\t      \"fullWidth\": \"\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.replyCont)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        _vm.replyCont = $event\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('mu-raised-button', {\n\t    staticClass: \"demo-raised-button\",\n\t    attrs: {\n\t      \"label\": \"确认\",\n\t      \"fullWidth\": \"\",\n\t      \"primary\": \"\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.replyAct\n\t    }\n\t  })], 1) : _vm._e(), _vm._v(\" \"), _c('totop', {\n\t    attrs: {\n\t      \"page\": \"topic\"\n\t    }\n\t  })], 1) : _vm._e(), _vm._v(\" \"), (!_vm.success) ? _c('div', {\n\t    staticClass: \"error\"\n\t  }, [_c('img', {\n\t    attrs: {\n\t      \"src\": __webpack_require__(6),\n\t      \"alt\": \"\"\n\t    }\n\t  })]) : _vm._e(), _vm._v(\" \"), (_vm.toast) ? _c('mu-snackbar', {\n\t    attrs: {\n\t      \"message\": _vm.successTxt\n\t    }\n\t  }) : _vm._e()], 1)\n\t},staticRenderFns: []}\n\n/***/ },\n\n/***/ 51:\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _webpackZepto = __webpack_require__(1);\n\t\n\tvar _webpackZepto2 = _interopRequireDefault(_webpackZepto);\n\t\n\tvar _mhead = __webpack_require__(4);\n\t\n\tvar _mhead2 = _interopRequireDefault(_mhead);\n\t\n\tvar _toTop = __webpack_require__(9);\n\t\n\tvar _toTop2 = _interopRequireDefault(_toTop);\n\t\n\tvar _filters = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar markdown = __webpack_require__(69).markdown;\n\t\n\texports.default = {\n\t  name: 'app',\n\t  components: {\n\t    mhead: _mhead2.default, totop: _toTop2.default\n\t  },\n\t  filters: {\n\t    getTimeStr: function getTimeStr(time) {\n\t      return (0, _filters.getTimeStr)(time);\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      topicId: '',\n\t      topic: {},\n\t      success: false,\n\t      userId: '',\n\t      curReplyId: '',\n\t      replyCont: '',\n\t      replyContTo: '',\n\t      token: '',\n\t      authorTxt: '---from [Vue + Muse-UI](https://github.com/mov1er/cnode-code)',\n\t      successTxt: '',\n\t      toast: false,\n\t      collected: false\n\t    };\n\t  },\n\t  mounted: function mounted() {\n\t    var _this = this;\n\t\n\t    this.topicId = this.$route.params.id;\n\t    this.userId = this.$store.state.user.userInfo.userId;\n\t    this.token = this.$store.state.user.userInfo.token;\n\t\n\t    _webpackZepto2.default.get('https://cnodejs.org/api/v1/topic/' + this.topicId, function (d) {\n\t      if (d && d.data) {\n\t        _this.topic = d.data;\n\t        _this.success = true;\n\t      }\n\t    });\n\t  },\n\t\n\t  methods: {\n\t    getTabInfo: function getTabInfo(tab, good, top, isClass) {\n\t      return (0, _filters.getTabInfo)(tab, good, top, isClass);\n\t    },\n\t    replyTo: function replyTo(reply) {\n\t      if (!this.userId) {\n\t        this.$router.push({\n\t          name: 'login',\n\t          params: {\n\t            redirect: encodeURIComponent(this.$route.path)\n\t          }\n\t        });\n\t      } else {\n\t        this.curReplyId = reply.id;\n\t        this.replyContTo = '@' + reply.author.loginname + ' ';\n\t      }\n\t    },\n\t    replyAct: function replyAct() {\n\t      var _this2 = this;\n\t\n\t      var postData = {\n\t        accesstoken: this.token\n\t      };\n\t      var htmlText = this.authorTxt;\n\t      if (this.curReplyId) {\n\t        postData.reply_id = this.curReplyId;\n\t        postData.content = this.replyContTo + '     ' + htmlText;\n\t      } else {\n\t        postData.content = this.replyCont + '     ' + htmlText;\n\t      }\n\t      console.log(postData);\n\t\n\t      _webpackZepto2.default.ajax({\n\t        type: 'POST',\n\t        url: 'https://cnodejs.org/api/v1/topic/' + this.topicId + '/replies',\n\t        data: postData,\n\t        dataType: 'json',\n\t        success: function success(res) {\n\t          if (res.success) {\n\t            _this2.toast = true;\n\t            _this2.successTxt = \"回复成功，即将跳转\";\n\t            if (_this2.toastTimer) clearTimeout(_this2.toastTimer);\n\t            _this2.toastTimer = setTimeout(function () {\n\t              _this2.toast = false;\n\t              history.go(0);\n\t            }, 2000);\n\t          }\n\t        },\n\t        error: function error(res) {\n\t          var error = JSON.parse(res.responseText);\n\t          _this2.toast = true;\n\t          _this2.successTxt = error.error_msg;\n\t          if (_this2.toastTimer) clearTimeout(_this2.toastTimer);\n\t          _this2.toastTimer = setTimeout(function () {\n\t            _this2.toast = false;\n\t            history.go(0);\n\t          }, 2000);\n\t        }\n\t      });\n\t    },\n\t    upTo: function upTo(reply) {\n\t      var _this3 = this;\n\t\n\t      if (!this.userId) {\n\t        this.$router.push({\n\t          name: 'login',\n\t          params: {\n\t            redirect: encodeURIComponent(this.$route.path)\n\t          }\n\t        });\n\t      } else {\n\t        _webpackZepto2.default.ajax({\n\t          type: 'POST',\n\t          url: 'https://cnodejs.org/api/v1/reply/' + reply.id + '/ups',\n\t          data: { accesstoken: this.token },\n\t          dataType: 'json',\n\t          success: function success(res) {\n\t            if (res.success) {\n\t              if (res.action === 'down') {\n\t                var index = _webpackZepto2.default.inArray(_this3.userId, reply.ups);\n\t                reply.ups.splice(index, 1);\n\t              } else {\n\t                reply.ups.push(_this3.userId);\n\t              }\n\t            }\n\t          },\n\t          error: function error(res) {\n\t            var error = JSON.parse(res.responseText);\n\t            alert(error.error_msg);\n\t            return false;\n\t          }\n\t        });\n\t      }\n\t    },\n\t    isUped: function isUped(ups) {\n\t      return _webpackZepto2.default.inArray(this.userId, ups) >= 0;\n\t    },\n\t    collect: function collect() {\n\t      this.collected = !this.collected;\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 69:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// super simple module for the most common nodejs use case.\n\texports.markdown = __webpack_require__(70);\n\texports.parse = exports.markdown.toHTML;\n\n\n/***/ },\n\n/***/ 70:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Released under MIT license\n\t// Copyright (c) 2009-2010 Dominic Baggott\n\t// Copyright (c) 2009-2010 Ash Berlin\n\t// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\t\n\t/*jshint browser:true, devel:true */\n\t\n\t(function( expose ) {\n\t\n\t/**\n\t *  class Markdown\n\t *\n\t *  Markdown processing in Javascript done right. We have very particular views\n\t *  on what constitutes 'right' which include:\n\t *\n\t *  - produces well-formed HTML (this means that em and strong nesting is\n\t *    important)\n\t *\n\t *  - has an intermediate representation to allow processing of parsed data (We\n\t *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n\t *\n\t *  - is easily extensible to add new dialects without having to rewrite the\n\t *    entire parsing mechanics\n\t *\n\t *  - has a good test suite\n\t *\n\t *  This implementation fulfills all of these (except that the test suite could\n\t *  do with expanding to automatically run all the fixtures from other Markdown\n\t *  implementations.)\n\t *\n\t *  ##### Intermediate Representation\n\t *\n\t *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n\t *\n\t *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n\t **/\n\tvar Markdown = expose.Markdown = function(dialect) {\n\t  switch (typeof dialect) {\n\t    case \"undefined\":\n\t      this.dialect = Markdown.dialects.Gruber;\n\t      break;\n\t    case \"object\":\n\t      this.dialect = dialect;\n\t      break;\n\t    default:\n\t      if ( dialect in Markdown.dialects ) {\n\t        this.dialect = Markdown.dialects[dialect];\n\t      }\n\t      else {\n\t        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n\t      }\n\t      break;\n\t  }\n\t  this.em_state = [];\n\t  this.strong_state = [];\n\t  this.debug_indent = \"\";\n\t};\n\t\n\t/**\n\t *  parse( markdown, [dialect] ) -> JsonML\n\t *  - markdown (String): markdown string to parse\n\t *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n\t *\n\t *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n\t **/\n\texpose.parse = function( source, dialect ) {\n\t  // dialect will default if undefined\n\t  var md = new Markdown( dialect );\n\t  return md.toTree( source );\n\t};\n\t\n\t/**\n\t *  toHTML( markdown, [dialect]  ) -> String\n\t *  toHTML( md_tree ) -> String\n\t *  - markdown (String): markdown string to parse\n\t *  - md_tree (Markdown.JsonML): parsed markdown tree\n\t *\n\t *  Take markdown (either as a string or as a JsonML tree) and run it through\n\t *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n\t **/\n\texpose.toHTML = function toHTML( source , dialect , options ) {\n\t  var input = expose.toHTMLTree( source , dialect , options );\n\t\n\t  return expose.renderJsonML( input );\n\t};\n\t\n\t/**\n\t *  toHTMLTree( markdown, [dialect] ) -> JsonML\n\t *  toHTMLTree( md_tree ) -> JsonML\n\t *  - markdown (String): markdown string to parse\n\t *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n\t *  - md_tree (Markdown.JsonML): parsed markdown tree\n\t *\n\t *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n\t *  to this function, it is first parsed into a markdown tree by calling\n\t *  [[parse]].\n\t **/\n\texpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n\t  // convert string input to an MD tree\n\t  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\t\n\t  // Now convert the MD tree to an HTML tree\n\t\n\t  // remove references from the tree\n\t  var attrs = extract_attr( input ),\n\t      refs = {};\n\t\n\t  if ( attrs && attrs.references ) {\n\t    refs = attrs.references;\n\t  }\n\t\n\t  var html = convert_tree_to_html( input, refs , options );\n\t  merge_text_nodes( html );\n\t  return html;\n\t};\n\t\n\t// For Spidermonkey based engines\n\tfunction mk_block_toSource() {\n\t  return \"Markdown.mk_block( \" +\n\t          uneval(this.toString()) +\n\t          \", \" +\n\t          uneval(this.trailing) +\n\t          \", \" +\n\t          uneval(this.lineNumber) +\n\t          \" )\";\n\t}\n\t\n\t// node\n\tfunction mk_block_inspect() {\n\t  var util = __webpack_require__(19);\n\t  return \"Markdown.mk_block( \" +\n\t          util.inspect(this.toString()) +\n\t          \", \" +\n\t          util.inspect(this.trailing) +\n\t          \", \" +\n\t          util.inspect(this.lineNumber) +\n\t          \" )\";\n\t\n\t}\n\t\n\tvar mk_block = Markdown.mk_block = function(block, trail, line) {\n\t  // Be helpful for default case in tests.\n\t  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\t\n\t  var s = new String(block);\n\t  s.trailing = trail;\n\t  // To make it clear its not just a string\n\t  s.inspect = mk_block_inspect;\n\t  s.toSource = mk_block_toSource;\n\t\n\t  if ( line != undefined )\n\t    s.lineNumber = line;\n\t\n\t  return s;\n\t};\n\t\n\tfunction count_lines( str ) {\n\t  var n = 0, i = -1;\n\t  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n\t  return n;\n\t}\n\t\n\t// Internal - split source into rough blocks\n\tMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n\t  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n\t  // [\\s\\S] matches _anything_ (newline or space)\n\t  // [^] is equivalent but doesn't work in IEs.\n\t  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n\t      blocks = [],\n\t      m;\n\t\n\t  var line_no = 1;\n\t\n\t  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n\t    // skip (but count) leading blank lines\n\t    line_no += count_lines( m[0] );\n\t    re.lastIndex = m[0].length;\n\t  }\n\t\n\t  while ( ( m = re.exec(input) ) !== null ) {\n\t    if (m[2] == \"\\n#\") {\n\t      m[2] = \"\\n\";\n\t      re.lastIndex--;\n\t    }\n\t    blocks.push( mk_block( m[1], m[2], line_no ) );\n\t    line_no += count_lines( m[0] );\n\t  }\n\t\n\t  return blocks;\n\t};\n\t\n\t/**\n\t *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n\t *  - block (String): the block to process\n\t *  - next (Array): the following blocks\n\t *\n\t * Process `block` and return an array of JsonML nodes representing `block`.\n\t *\n\t * It does this by asking each block level function in the dialect to process\n\t * the block until one can. Succesful handling is indicated by returning an\n\t * array (with zero or more JsonML nodes), failure by a false value.\n\t *\n\t * Blocks handlers are responsible for calling [[Markdown#processInline]]\n\t * themselves as appropriate.\n\t *\n\t * If the blocks were split incorrectly or adjacent blocks need collapsing you\n\t * can adjust `next` in place using shift/splice etc.\n\t *\n\t * If any of this default behaviour is not right for the dialect, you can\n\t * define a `__call__` method on the dialect that will get invoked to handle\n\t * the block processing.\n\t */\n\tMarkdown.prototype.processBlock = function processBlock( block, next ) {\n\t  var cbs = this.dialect.block,\n\t      ord = cbs.__order__;\n\t\n\t  if ( \"__call__\" in cbs ) {\n\t    return cbs.__call__.call(this, block, next);\n\t  }\n\t\n\t  for ( var i = 0; i < ord.length; i++ ) {\n\t    //D:this.debug( \"Testing\", ord[i] );\n\t    var res = cbs[ ord[i] ].call( this, block, next );\n\t    if ( res ) {\n\t      //D:this.debug(\"  matched\");\n\t      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n\t        this.debug(ord[i], \"didn't return a proper array\");\n\t      //D:this.debug( \"\" );\n\t      return res;\n\t    }\n\t  }\n\t\n\t  // Uhoh! no match! Should we throw an error?\n\t  return [];\n\t};\n\t\n\tMarkdown.prototype.processInline = function processInline( block ) {\n\t  return this.dialect.inline.__call__.call( this, String( block ) );\n\t};\n\t\n\t/**\n\t *  Markdown#toTree( source ) -> JsonML\n\t *  - source (String): markdown source to parse\n\t *\n\t *  Parse `source` into a JsonML tree representing the markdown document.\n\t **/\n\t// custom_tree means set this.tree to `custom_tree` and restore old value on return\n\tMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n\t  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\t\n\t  // Make tree a member variable so its easier to mess with in extensions\n\t  var old_tree = this.tree;\n\t  try {\n\t    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\t\n\t    blocks:\n\t    while ( blocks.length ) {\n\t      var b = this.processBlock( blocks.shift(), blocks );\n\t\n\t      // Reference blocks and the like won't return any content\n\t      if ( !b.length ) continue blocks;\n\t\n\t      this.tree.push.apply( this.tree, b );\n\t    }\n\t    return this.tree;\n\t  }\n\t  finally {\n\t    if ( custom_root ) {\n\t      this.tree = old_tree;\n\t    }\n\t  }\n\t};\n\t\n\t// Noop by default\n\tMarkdown.prototype.debug = function () {\n\t  var args = Array.prototype.slice.call( arguments);\n\t  args.unshift(this.debug_indent);\n\t  if ( typeof print !== \"undefined\" )\n\t      print.apply( print, args );\n\t  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n\t      console.log.apply( null, args );\n\t}\n\t\n\tMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n\t  // Dont use /g regexps with this\n\t  var m,\n\t      b = block.valueOf();\n\t\n\t  while ( b.length && (m = re.exec(b) ) != null ) {\n\t    b = b.substr( m[0].length );\n\t    cb.call(this, m);\n\t  }\n\t  return b;\n\t};\n\t\n\t/**\n\t * Markdown.dialects\n\t *\n\t * Namespace of built-in dialects.\n\t **/\n\tMarkdown.dialects = {};\n\t\n\t/**\n\t * Markdown.dialects.Gruber\n\t *\n\t * The default dialect that follows the rules set out by John Gruber's\n\t * markdown.pl as closely as possible. Well actually we follow the behaviour of\n\t * that script which in some places is not exactly what the syntax web page\n\t * says.\n\t **/\n\tMarkdown.dialects.Gruber = {\n\t  block: {\n\t    atxHeader: function atxHeader( block, next ) {\n\t      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\t\n\t      if ( !m ) return undefined;\n\t\n\t      var header = [ \"header\", { level: m[ 1 ].length } ];\n\t      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\t\n\t      if ( m[0].length < block.length )\n\t        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\t\n\t      return [ header ];\n\t    },\n\t\n\t    setextHeader: function setextHeader( block, next ) {\n\t      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\t\n\t      if ( !m ) return undefined;\n\t\n\t      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n\t      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\t\n\t      if ( m[0].length < block.length )\n\t        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\t\n\t      return [ header ];\n\t    },\n\t\n\t    code: function code( block, next ) {\n\t      // |    Foo\n\t      // |bar\n\t      // should be a code block followed by a paragraph. Fun\n\t      //\n\t      // There might also be adjacent code block to merge.\n\t\n\t      var ret = [],\n\t          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n\t          lines;\n\t\n\t      // 4 spaces + content\n\t      if ( !block.match( re ) ) return undefined;\n\t\n\t      block_search:\n\t      do {\n\t        // Now pull out the rest of the lines\n\t        var b = this.loop_re_over_block(\n\t                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\t\n\t        if ( b.length ) {\n\t          // Case alluded to in first comment. push it back on as a new block\n\t          next.unshift( mk_block(b, block.trailing) );\n\t          break block_search;\n\t        }\n\t        else if ( next.length ) {\n\t          // Check the next block - it might be code too\n\t          if ( !next[0].match( re ) ) break block_search;\n\t\n\t          // Pull how how many blanks lines follow - minus two to account for .join\n\t          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\t\n\t          block = next.shift();\n\t        }\n\t        else {\n\t          break block_search;\n\t        }\n\t      } while ( true );\n\t\n\t      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n\t    },\n\t\n\t    horizRule: function horizRule( block, next ) {\n\t      // this needs to find any hr in the block to handle abutting blocks\n\t      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\t\n\t      if ( !m ) {\n\t        return undefined;\n\t      }\n\t\n\t      var jsonml = [ [ \"hr\" ] ];\n\t\n\t      // if there's a leading abutting block, process it\n\t      if ( m[ 1 ] ) {\n\t        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n\t      }\n\t\n\t      // if there's a trailing abutting block, stick it into next\n\t      if ( m[ 3 ] ) {\n\t        next.unshift( mk_block( m[ 3 ] ) );\n\t      }\n\t\n\t      return jsonml;\n\t    },\n\t\n\t    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n\t    // between the items (and result in text just in the <li>) and loose lists,\n\t    // which have an empty line between list items, resulting in (one or more)\n\t    // paragraphs inside the <li>.\n\t    //\n\t    // There are all sorts weird edge cases about the original markdown.pl's\n\t    // handling of lists:\n\t    //\n\t    // * Nested lists are supposed to be indented by four chars per level. But\n\t    //   if they aren't, you can get a nested list by indenting by less than\n\t    //   four so long as the indent doesn't match an indent of an existing list\n\t    //   item in the 'nest stack'.\n\t    //\n\t    // * The type of the list (bullet or number) is controlled just by the\n\t    //    first item at the indent. Subsequent changes are ignored unless they\n\t    //    are for nested lists\n\t    //\n\t    lists: (function( ) {\n\t      // Use a closure to hide a few variables.\n\t      var any_list = \"[*+-]|\\\\d+\\\\.\",\n\t          bullet_list = /[*+-]/,\n\t          number_list = /\\d+\\./,\n\t          // Capture leading indent as it matters for determining nested lists.\n\t          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n\t          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\t\n\t      // TODO: Cache this regexp for certain depths.\n\t      // Create a regexp suitable for matching an li for a given stack depth\n\t      function regex_for_depth( depth ) {\n\t\n\t        return new RegExp(\n\t          // m[1] = indent, m[2] = list_type\n\t          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n\t          // m[3] = cont\n\t          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n\t        );\n\t      }\n\t      function expand_tab( input ) {\n\t        return input.replace( / {0,3}\\t/g, \"    \" );\n\t      }\n\t\n\t      // Add inline content `inline` to `li`. inline comes from processInline\n\t      // so is an array of content\n\t      function add(li, loose, inline, nl) {\n\t        if ( loose ) {\n\t          li.push( [ \"para\" ].concat(inline) );\n\t          return;\n\t        }\n\t        // Hmmm, should this be any block level element or just paras?\n\t        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n\t                   ? li[li.length -1]\n\t                   : li;\n\t\n\t        // If there is already some content in this list, add the new line in\n\t        if ( nl && li.length > 1 ) inline.unshift(nl);\n\t\n\t        for ( var i = 0; i < inline.length; i++ ) {\n\t          var what = inline[i],\n\t              is_str = typeof what == \"string\";\n\t          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n\t            add_to[ add_to.length-1 ] += what;\n\t          }\n\t          else {\n\t            add_to.push( what );\n\t          }\n\t        }\n\t      }\n\t\n\t      // contained means have an indent greater than the current one. On\n\t      // *every* line in the block\n\t      function get_contained_blocks( depth, blocks ) {\n\t\n\t        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n\t            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n\t            ret = [];\n\t\n\t        while ( blocks.length > 0 ) {\n\t          if ( re.exec( blocks[0] ) ) {\n\t            var b = blocks.shift(),\n\t                // Now remove that indent\n\t                x = b.replace( replace, \"\");\n\t\n\t            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n\t          }\n\t          else {\n\t            break;\n\t          }\n\t        }\n\t        return ret;\n\t      }\n\t\n\t      // passed to stack.forEach to turn list items up the stack into paras\n\t      function paragraphify(s, i, stack) {\n\t        var list = s.list;\n\t        var last_li = list[list.length-1];\n\t\n\t        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n\t          return;\n\t        }\n\t        if ( i + 1 == stack.length ) {\n\t          // Last stack frame\n\t          // Keep the same array, but replace the contents\n\t          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n\t        }\n\t        else {\n\t          var sublist = last_li.pop();\n\t          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n\t        }\n\t      }\n\t\n\t      // The matcher function\n\t      return function( block, next ) {\n\t        var m = block.match( is_list_re );\n\t        if ( !m ) return undefined;\n\t\n\t        function make_list( m ) {\n\t          var list = bullet_list.exec( m[2] )\n\t                   ? [\"bulletlist\"]\n\t                   : [\"numberlist\"];\n\t\n\t          stack.push( { list: list, indent: m[1] } );\n\t          return list;\n\t        }\n\t\n\t\n\t        var stack = [], // Stack of lists for nesting.\n\t            list = make_list( m ),\n\t            last_li,\n\t            loose = false,\n\t            ret = [ stack[0].list ],\n\t            i;\n\t\n\t        // Loop to search over block looking for inner block elements and loose lists\n\t        loose_search:\n\t        while ( true ) {\n\t          // Split into lines preserving new lines at end of line\n\t          var lines = block.split( /(?=\\n)/ );\n\t\n\t          // We have to grab all lines for a li and call processInline on them\n\t          // once as there are some inline things that can span lines.\n\t          var li_accumulate = \"\";\n\t\n\t          // Loop over the lines in this block looking for tight lists.\n\t          tight_search:\n\t          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n\t            var nl = \"\",\n\t                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\t\n\t            // TODO: really should cache this\n\t            var line_re = regex_for_depth( stack.length );\n\t\n\t            m = l.match( line_re );\n\t            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\t\n\t            // We have a list item\n\t            if ( m[1] !== undefined ) {\n\t              // Process the previous list item, if any\n\t              if ( li_accumulate.length ) {\n\t                add( last_li, loose, this.processInline( li_accumulate ), nl );\n\t                // Loose mode will have been dealt with. Reset it\n\t                loose = false;\n\t                li_accumulate = \"\";\n\t              }\n\t\n\t              m[1] = expand_tab( m[1] );\n\t              var wanted_depth = Math.floor(m[1].length/4)+1;\n\t              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n\t              if ( wanted_depth > stack.length ) {\n\t                // Deep enough for a nested list outright\n\t                //print ( \"new nested list\" );\n\t                list = make_list( m );\n\t                last_li.push( list );\n\t                last_li = list[1] = [ \"listitem\" ];\n\t              }\n\t              else {\n\t                // We aren't deep enough to be strictly a new level. This is\n\t                // where Md.pl goes nuts. If the indent matches a level in the\n\t                // stack, put it there, else put it one deeper then the\n\t                // wanted_depth deserves.\n\t                var found = false;\n\t                for ( i = 0; i < stack.length; i++ ) {\n\t                  if ( stack[ i ].indent != m[1] ) continue;\n\t                  list = stack[ i ].list;\n\t                  stack.splice( i+1, stack.length - (i+1) );\n\t                  found = true;\n\t                  break;\n\t                }\n\t\n\t                if (!found) {\n\t                  //print(\"not found. l:\", uneval(l));\n\t                  wanted_depth++;\n\t                  if ( wanted_depth <= stack.length ) {\n\t                    stack.splice(wanted_depth, stack.length - wanted_depth);\n\t                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n\t                    list = stack[wanted_depth-1].list;\n\t                    //print(\"list:\", uneval(list) );\n\t                  }\n\t                  else {\n\t                    //print (\"made new stack for messy indent\");\n\t                    list = make_list(m);\n\t                    last_li.push(list);\n\t                  }\n\t                }\n\t\n\t                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n\t                last_li = [ \"listitem\" ];\n\t                list.push(last_li);\n\t              } // end depth of shenegains\n\t              nl = \"\";\n\t            }\n\t\n\t            // Add content\n\t            if ( l.length > m[0].length ) {\n\t              li_accumulate += nl + l.substr( m[0].length );\n\t            }\n\t          } // tight_search\n\t\n\t          if ( li_accumulate.length ) {\n\t            add( last_li, loose, this.processInline( li_accumulate ), nl );\n\t            // Loose mode will have been dealt with. Reset it\n\t            loose = false;\n\t            li_accumulate = \"\";\n\t          }\n\t\n\t          // Look at the next block - we might have a loose list. Or an extra\n\t          // paragraph for the current li\n\t          var contained = get_contained_blocks( stack.length, next );\n\t\n\t          // Deal with code blocks or properly nested lists\n\t          if ( contained.length > 0 ) {\n\t            // Make sure all listitems up the stack are paragraphs\n\t            forEach( stack, paragraphify, this);\n\t\n\t            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n\t          }\n\t\n\t          var next_block = next[0] && next[0].valueOf() || \"\";\n\t\n\t          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n\t            block = next.shift();\n\t\n\t            // Check for an HR following a list: features/lists/hr_abutting\n\t            var hr = this.dialect.block.horizRule( block, next );\n\t\n\t            if ( hr ) {\n\t              ret.push.apply(ret, hr);\n\t              break;\n\t            }\n\t\n\t            // Make sure all listitems up the stack are paragraphs\n\t            forEach( stack, paragraphify, this);\n\t\n\t            loose = true;\n\t            continue loose_search;\n\t          }\n\t          break;\n\t        } // loose_search\n\t\n\t        return ret;\n\t      };\n\t    })(),\n\t\n\t    blockquote: function blockquote( block, next ) {\n\t      if ( !block.match( /^>/m ) )\n\t        return undefined;\n\t\n\t      var jsonml = [];\n\t\n\t      // separate out the leading abutting block, if any. I.e. in this case:\n\t      //\n\t      //  a\n\t      //  > b\n\t      //\n\t      if ( block[ 0 ] != \">\" ) {\n\t        var lines = block.split( /\\n/ ),\n\t            prev = [],\n\t            line_no = block.lineNumber;\n\t\n\t        // keep shifting lines until you find a crotchet\n\t        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n\t            prev.push( lines.shift() );\n\t            line_no++;\n\t        }\n\t\n\t        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n\t        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n\t        // reassemble new block of just block quotes!\n\t        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n\t      }\n\t\n\t\n\t      // if the next block is also a blockquote merge it in\n\t      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n\t        var b = next.shift();\n\t        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n\t      }\n\t\n\t      // Strip off the leading \"> \" and re-process as a block.\n\t      var input = block.replace( /^> ?/gm, \"\" ),\n\t          old_tree = this.tree,\n\t          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n\t          attr = extract_attr( processedBlock );\n\t\n\t      // If any link references were found get rid of them\n\t      if ( attr && attr.references ) {\n\t        delete attr.references;\n\t        // And then remove the attribute object if it's empty\n\t        if ( isEmpty( attr ) ) {\n\t          processedBlock.splice( 1, 1 );\n\t        }\n\t      }\n\t\n\t      jsonml.push( processedBlock );\n\t      return jsonml;\n\t    },\n\t\n\t    referenceDefn: function referenceDefn( block, next) {\n\t      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n\t      // interesting matches are [ , ref_id, url, , title, title ]\n\t\n\t      if ( !block.match(re) )\n\t        return undefined;\n\t\n\t      // make an attribute node if it doesn't exist\n\t      if ( !extract_attr( this.tree ) ) {\n\t        this.tree.splice( 1, 0, {} );\n\t      }\n\t\n\t      var attrs = extract_attr( this.tree );\n\t\n\t      // make a references hash if it doesn't exist\n\t      if ( attrs.references === undefined ) {\n\t        attrs.references = {};\n\t      }\n\t\n\t      var b = this.loop_re_over_block(re, block, function( m ) {\n\t\n\t        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n\t          m[2] = m[2].substring( 1, m[2].length - 1 );\n\t\n\t        var ref = attrs.references[ m[1].toLowerCase() ] = {\n\t          href: m[2]\n\t        };\n\t\n\t        if ( m[4] !== undefined )\n\t          ref.title = m[4];\n\t        else if ( m[5] !== undefined )\n\t          ref.title = m[5];\n\t\n\t      } );\n\t\n\t      if ( b.length )\n\t        next.unshift( mk_block( b, block.trailing ) );\n\t\n\t      return [];\n\t    },\n\t\n\t    para: function para( block, next ) {\n\t      // everything's a para!\n\t      return [ [\"para\"].concat( this.processInline( block ) ) ];\n\t    }\n\t  }\n\t};\n\t\n\tMarkdown.dialects.Gruber.inline = {\n\t\n\t    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n\t      var m,\n\t          res,\n\t          lastIndex = 0;\n\t\n\t      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n\t      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\t\n\t      m = re.exec( text );\n\t      if (!m) {\n\t        // Just boring text\n\t        return [ text.length, text ];\n\t      }\n\t      else if ( m[1] ) {\n\t        // Some un-interesting text matched. Return that first\n\t        return [ m[1].length, m[1] ];\n\t      }\n\t\n\t      var res;\n\t      if ( m[2] in this.dialect.inline ) {\n\t        res = this.dialect.inline[ m[2] ].call(\n\t                  this,\n\t                  text.substr( m.index ), m, previous_nodes || [] );\n\t      }\n\t      // Default for now to make dev easier. just slurp special and output it.\n\t      res = res || [ m[2].length, m[2] ];\n\t      return res;\n\t    },\n\t\n\t    __call__: function inline( text, patterns ) {\n\t\n\t      var out = [],\n\t          res;\n\t\n\t      function add(x) {\n\t        //D:self.debug(\"  adding output\", uneval(x));\n\t        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n\t          out[ out.length-1 ] += x;\n\t        else\n\t          out.push(x);\n\t      }\n\t\n\t      while ( text.length > 0 ) {\n\t        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n\t        text = text.substr( res.shift() );\n\t        forEach(res, add )\n\t      }\n\t\n\t      return out;\n\t    },\n\t\n\t    // These characters are intersting elsewhere, so have rules for them so that\n\t    // chunks of plain text blocks don't include them\n\t    \"]\": function () {},\n\t    \"}\": function () {},\n\t\n\t    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\t\n\t    \"\\\\\": function escaped( text ) {\n\t      // [ length of input processed, node/children to add... ]\n\t      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n\t      if ( this.dialect.inline.__escape__.exec( text ) )\n\t        return [ 2, text.charAt( 1 ) ];\n\t      else\n\t        // Not an esacpe\n\t        return [ 1, \"\\\\\" ];\n\t    },\n\t\n\t    \"![\": function image( text ) {\n\t\n\t      // Unlike images, alt text is plain text only. no other elements are\n\t      // allowed in there\n\t\n\t      // ![Alt text](/path/to/img.jpg \"Optional title\")\n\t      //      1          2            3       4         <--- captures\n\t      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\t\n\t      if ( m ) {\n\t        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n\t          m[2] = m[2].substring( 1, m[2].length - 1 );\n\t\n\t        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\t\n\t        var attrs = { alt: m[1], href: m[2] || \"\" };\n\t        if ( m[4] !== undefined)\n\t          attrs.title = m[4];\n\t\n\t        return [ m[0].length, [ \"img\", attrs ] ];\n\t      }\n\t\n\t      // ![Alt text][id]\n\t      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\t\n\t      if ( m ) {\n\t        // We can't check if the reference is known here as it likely wont be\n\t        // found till after. Check it in md tree->hmtl tree conversion\n\t        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n\t      }\n\t\n\t      // Just consume the '!['\n\t      return [ 2, \"![\" ];\n\t    },\n\t\n\t    \"[\": function link( text ) {\n\t\n\t      var orig = String(text);\n\t      // Inline content is possible inside `link text`\n\t      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\t\n\t      // No closing ']' found. Just consume the [\n\t      if ( !res ) return [ 1, \"[\" ];\n\t\n\t      var consumed = 1 + res[ 0 ],\n\t          children = res[ 1 ],\n\t          link,\n\t          attrs;\n\t\n\t      // At this point the first [...] has been parsed. See what follows to find\n\t      // out which kind of link we are (reference or direct url)\n\t      text = text.substr( consumed );\n\t\n\t      // [link text](/path/to/img.jpg \"Optional title\")\n\t      //                 1            2       3         <--- captures\n\t      // This will capture up to the last paren in the block. We then pull\n\t      // back based on if there a matching ones in the url\n\t      //    ([here](/url/(test))\n\t      // The parens have to be balanced\n\t      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n\t      if ( m ) {\n\t        var url = m[1];\n\t        consumed += m[0].length;\n\t\n\t        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n\t          url = url.substring( 1, url.length - 1 );\n\t\n\t        // If there is a title we don't have to worry about parens in the url\n\t        if ( !m[3] ) {\n\t          var open_parens = 1; // One open that isn't in the capture\n\t          for ( var len = 0; len < url.length; len++ ) {\n\t            switch ( url[len] ) {\n\t            case \"(\":\n\t              open_parens++;\n\t              break;\n\t            case \")\":\n\t              if ( --open_parens == 0) {\n\t                consumed -= url.length - len;\n\t                url = url.substring(0, len);\n\t              }\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Process escapes only\n\t        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\t\n\t        attrs = { href: url || \"\" };\n\t        if ( m[3] !== undefined)\n\t          attrs.title = m[3];\n\t\n\t        link = [ \"link\", attrs ].concat( children );\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // [Alt text][id]\n\t      // [Alt text] [id]\n\t      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\t\n\t      if ( m ) {\n\t\n\t        consumed += m[ 0 ].length;\n\t\n\t        // [links][] uses links as its reference\n\t        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\t\n\t        link = [ \"link_ref\", attrs ].concat( children );\n\t\n\t        // We can't check if the reference is known here as it likely wont be\n\t        // found till after. Check it in md tree->hmtl tree conversion.\n\t        // Store the original so that conversion can revert if the ref isn't found.\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // [id]\n\t      // Only if id is plain (no formatting.)\n\t      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\t\n\t        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n\t        link = [ \"link_ref\", attrs, children[0] ];\n\t        return [ consumed, link ];\n\t      }\n\t\n\t      // Just consume the \"[\"\n\t      return [ 1, \"[\" ];\n\t    },\n\t\n\t\n\t    \"<\": function autoLink( text ) {\n\t      var m;\n\t\n\t      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n\t        if ( m[3] ) {\n\t          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\t\n\t        }\n\t        else if ( m[2] == \"mailto\" ) {\n\t          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n\t        }\n\t        else\n\t          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n\t      }\n\t\n\t      return [ 1, \"<\" ];\n\t    },\n\t\n\t    \"`\": function inlineCode( text ) {\n\t      // Inline code block. as many backticks as you like to start it\n\t      // Always skip over the opening ticks.\n\t      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\t\n\t      if ( m && m[2] )\n\t        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n\t      else {\n\t        // TODO: No matching end code found - warn!\n\t        return [ 1, \"`\" ];\n\t      }\n\t    },\n\t\n\t    \"  \\n\": function lineBreak( text ) {\n\t      return [ 3, [ \"linebreak\" ] ];\n\t    }\n\t\n\t};\n\t\n\t// Meta Helper/generator method for em and strong handling\n\tfunction strong_em( tag, md ) {\n\t\n\t  var state_slot = tag + \"_state\",\n\t      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\t\n\t  function CloseTag(len) {\n\t    this.len_after = len;\n\t    this.name = \"close_\" + md;\n\t  }\n\t\n\t  return function ( text, orig_match ) {\n\t\n\t    if ( this[state_slot][0] == md ) {\n\t      // Most recent em is of this type\n\t      //D:this.debug(\"closing\", md);\n\t      this[state_slot].shift();\n\t\n\t      // \"Consume\" everything to go back to the recrusion in the else-block below\n\t      return[ text.length, new CloseTag(text.length-md.length) ];\n\t    }\n\t    else {\n\t      // Store a clone of the em/strong states\n\t      var other = this[other_slot].slice(),\n\t          state = this[state_slot].slice();\n\t\n\t      this[state_slot].unshift(md);\n\t\n\t      //D:this.debug_indent += \"  \";\n\t\n\t      // Recurse\n\t      var res = this.processInline( text.substr( md.length ) );\n\t      //D:this.debug_indent = this.debug_indent.substr(2);\n\t\n\t      var last = res[res.length - 1];\n\t\n\t      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\t\n\t      var check = this[state_slot].shift();\n\t      if ( last instanceof CloseTag ) {\n\t        res.pop();\n\t        // We matched! Huzzah.\n\t        var consumed = text.length - last.len_after;\n\t        return [ consumed, [ tag ].concat(res) ];\n\t      }\n\t      else {\n\t        // Restore the state of the other kind. We might have mistakenly closed it.\n\t        this[other_slot] = other;\n\t        this[state_slot] = state;\n\t\n\t        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n\t        return [ md.length, md ];\n\t      }\n\t    }\n\t  }; // End returned function\n\t}\n\t\n\tMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\n\tMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\n\tMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\n\tMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\t\n\t\n\t// Build default order from insertion order.\n\tMarkdown.buildBlockOrder = function(d) {\n\t  var ord = [];\n\t  for ( var i in d ) {\n\t    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n\t    ord.push( i );\n\t  }\n\t  d.__order__ = ord;\n\t};\n\t\n\t// Build patterns for inline matcher\n\tMarkdown.buildInlinePatterns = function(d) {\n\t  var patterns = [];\n\t\n\t  for ( var i in d ) {\n\t    // __foo__ is reserved and not a pattern\n\t    if ( i.match( /^__.*__$/) ) continue;\n\t    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n\t             .replace( /\\n/, \"\\\\n\" );\n\t    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n\t  }\n\t\n\t  patterns = patterns.join(\"|\");\n\t  d.__patterns__ = patterns;\n\t  //print(\"patterns:\", uneval( patterns ) );\n\t\n\t  var fn = d.__call__;\n\t  d.__call__ = function(text, pattern) {\n\t    if ( pattern != undefined ) {\n\t      return fn.call(this, text, pattern);\n\t    }\n\t    else\n\t    {\n\t      return fn.call(this, text, patterns);\n\t    }\n\t  };\n\t};\n\t\n\tMarkdown.DialectHelpers = {};\n\tMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n\t  var consumed = 0,\n\t      nodes = [];\n\t\n\t  while ( true ) {\n\t    if ( text.charAt( consumed ) == want ) {\n\t      // Found the character we were looking for\n\t      consumed++;\n\t      return [ consumed, nodes ];\n\t    }\n\t\n\t    if ( consumed >= text.length ) {\n\t      // No closing char found. Abort.\n\t      return null;\n\t    }\n\t\n\t    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n\t    consumed += res[ 0 ];\n\t    // Add any returned nodes.\n\t    nodes.push.apply( nodes, res.slice( 1 ) );\n\t  }\n\t}\n\t\n\t// Helper function to make sub-classing a dialect easier\n\tMarkdown.subclassDialect = function( d ) {\n\t  function Block() {}\n\t  Block.prototype = d.block;\n\t  function Inline() {}\n\t  Inline.prototype = d.inline;\n\t\n\t  return { block: new Block(), inline: new Inline() };\n\t};\n\t\n\tMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\n\tMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\t\n\tMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\t\n\tMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n\t  var meta = split_meta_hash( meta_string ),\n\t      attr = {};\n\t\n\t  for ( var i = 0; i < meta.length; ++i ) {\n\t    // id: #foo\n\t    if ( /^#/.test( meta[ i ] ) ) {\n\t      attr.id = meta[ i ].substring( 1 );\n\t    }\n\t    // class: .foo\n\t    else if ( /^\\./.test( meta[ i ] ) ) {\n\t      // if class already exists, append the new one\n\t      if ( attr[\"class\"] ) {\n\t        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n\t      }\n\t      else {\n\t        attr[\"class\"] = meta[ i ].substring( 1 );\n\t      }\n\t    }\n\t    // attribute: foo=bar\n\t    else if ( /\\=/.test( meta[ i ] ) ) {\n\t      var s = meta[ i ].split( /\\=/ );\n\t      attr[ s[ 0 ] ] = s[ 1 ];\n\t    }\n\t  }\n\t\n\t  return attr;\n\t}\n\t\n\tfunction split_meta_hash( meta_string ) {\n\t  var meta = meta_string.split( \"\" ),\n\t      parts = [ \"\" ],\n\t      in_quotes = false;\n\t\n\t  while ( meta.length ) {\n\t    var letter = meta.shift();\n\t    switch ( letter ) {\n\t      case \" \" :\n\t        // if we're in a quoted section, keep it\n\t        if ( in_quotes ) {\n\t          parts[ parts.length - 1 ] += letter;\n\t        }\n\t        // otherwise make a new part\n\t        else {\n\t          parts.push( \"\" );\n\t        }\n\t        break;\n\t      case \"'\" :\n\t      case '\"' :\n\t        // reverse the quotes and move straight on\n\t        in_quotes = !in_quotes;\n\t        break;\n\t      case \"\\\\\" :\n\t        // shift off the next letter to be used straight away.\n\t        // it was escaped so we'll keep it whatever it is\n\t        letter = meta.shift();\n\t      default :\n\t        parts[ parts.length - 1 ] += letter;\n\t        break;\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\tMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n\t  // we're only interested in the first block\n\t  if ( block.lineNumber > 1 ) return undefined;\n\t\n\t  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n\t  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\t\n\t  // make an attribute node if it doesn't exist\n\t  if ( !extract_attr( this.tree ) ) {\n\t    this.tree.splice( 1, 0, {} );\n\t  }\n\t\n\t  var pairs = block.split( /\\n/ );\n\t  for ( p in pairs ) {\n\t    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n\t        key = m[ 1 ].toLowerCase(),\n\t        value = m[ 2 ];\n\t\n\t    this.tree[ 1 ][ key ] = value;\n\t  }\n\t\n\t  // document_meta produces no content!\n\t  return [];\n\t};\n\t\n\tMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n\t  // check if the last line of the block is an meta hash\n\t  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n\t  if ( !m ) return undefined;\n\t\n\t  // process the meta hash\n\t  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\t\n\t  var hash;\n\t\n\t  // if we matched ^ then we need to apply meta to the previous block\n\t  if ( m[ 1 ] === \"\" ) {\n\t    var node = this.tree[ this.tree.length - 1 ];\n\t    hash = extract_attr( node );\n\t\n\t    // if the node is a string (rather than JsonML), bail\n\t    if ( typeof node === \"string\" ) return undefined;\n\t\n\t    // create the attribute hash if it doesn't exist\n\t    if ( !hash ) {\n\t      hash = {};\n\t      node.splice( 1, 0, hash );\n\t    }\n\t\n\t    // add the attributes in\n\t    for ( a in attr ) {\n\t      hash[ a ] = attr[ a ];\n\t    }\n\t\n\t    // return nothing so the meta hash is removed\n\t    return [];\n\t  }\n\t\n\t  // pull the meta hash off the block and process what's left\n\t  var b = block.replace( /\\n.*$/, \"\" ),\n\t      result = this.processBlock( b, [] );\n\t\n\t  // get or make the attributes hash\n\t  hash = extract_attr( result[ 0 ] );\n\t  if ( !hash ) {\n\t    hash = {};\n\t    result[ 0 ].splice( 1, 0, hash );\n\t  }\n\t\n\t  // attach the attributes to the block\n\t  for ( a in attr ) {\n\t    hash[ a ] = attr[ a ];\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\tMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n\t  // one or more terms followed by one or more definitions, in a single block\n\t  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n\t      list = [ \"dl\" ],\n\t      i, m;\n\t\n\t  // see if we're dealing with a tight or loose block\n\t  if ( ( m = block.match( tight ) ) ) {\n\t    // pull subsequent tight DL blocks out of `next`\n\t    var blocks = [ block ];\n\t    while ( next.length && tight.exec( next[ 0 ] ) ) {\n\t      blocks.push( next.shift() );\n\t    }\n\t\n\t    for ( var b = 0; b < blocks.length; ++b ) {\n\t      var m = blocks[ b ].match( tight ),\n\t          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n\t          defns = m[ 2 ].split( /\\n:\\s+/ );\n\t\n\t      // print( uneval( m ) );\n\t\n\t      for ( i = 0; i < terms.length; ++i ) {\n\t        list.push( [ \"dt\", terms[ i ] ] );\n\t      }\n\t\n\t      for ( i = 0; i < defns.length; ++i ) {\n\t        // run inline processing over the definition\n\t        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    return undefined;\n\t  }\n\t\n\t  return [ list ];\n\t};\n\t\n\t// splits on unescaped instances of @ch. If @ch is not a character the result\n\t// can be unpredictable\n\t\n\tMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\t\n\t    var _split_on_unescaped = function(s, ch) {\n\t        ch = ch || '\\\\s';\n\t        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n\t        var res = [ ],\n\t            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n\t            m;\n\t        while(m = s.match(r)) {\n\t            res.push(m[1]);\n\t            s = m[2];\n\t        }\n\t        res.push(s);\n\t        return res;\n\t    }\n\t\n\t    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n\t        // find at least an unescaped pipe in each line\n\t        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n\t        i, m;\n\t    if (m = block.match(leading_pipe)) {\n\t        // remove leading pipes in contents\n\t        // (header and horizontal rule already have the leading pipe left out)\n\t        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n\t    } else if (! ( m = block.match(no_leading_pipe))) {\n\t        return undefined;\n\t    }\n\t\n\t    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\t\n\t    // remove trailing pipes, then split on pipes\n\t    // (no escaped pipes are allowed in horizontal rule)\n\t    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\t\n\t    // process alignment\n\t    var html_attrs = [ ];\n\t    forEach (m[2], function (s) {\n\t        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n\t        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n\t        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n\t        else                              html_attrs.push({});\n\t    });\n\t\n\t    // now for the header, avoid escaped pipes\n\t    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n\t    for (i = 0; i < m[1].length; i++) {\n\t        table[1][1].push(['th', html_attrs[i] || {}].concat(\n\t            this.processInline(m[1][i].trim())));\n\t    }\n\t\n\t    // now for body contents\n\t    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n\t        var html_row = ['tr'];\n\t        row = _split_on_unescaped(row, '|');\n\t        for (i = 0; i < row.length; i++) {\n\t            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n\t        }\n\t        table[2].push(html_row);\n\t    }, this);\n\t\n\t    return [table];\n\t}\n\t\n\tMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n\t  if ( !out.length ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // get the preceeding element\n\t  var before = out[ out.length - 1 ];\n\t\n\t  if ( typeof before === \"string\" ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // match a meta hash\n\t  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\t\n\t  // no match, false alarm\n\t  if ( !m ) {\n\t    return [ 2, \"{:\" ];\n\t  }\n\t\n\t  // attach the attributes to the preceeding element\n\t  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n\t      attr = extract_attr( before );\n\t\n\t  if ( !attr ) {\n\t    attr = {};\n\t    before.splice( 1, 0, attr );\n\t  }\n\t\n\t  for ( var k in meta ) {\n\t    attr[ k ] = meta[ k ];\n\t  }\n\t\n\t  // cut out the string and replace it with nothing\n\t  return [ m[ 0 ].length, \"\" ];\n\t};\n\t\n\tMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\t\n\tMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\n\tMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\t\n\tvar isArray = Array.isArray || function(obj) {\n\t  return Object.prototype.toString.call(obj) == \"[object Array]\";\n\t};\n\t\n\tvar forEach;\n\t// Don't mess with Array.prototype. Its not friendly\n\tif ( Array.prototype.forEach ) {\n\t  forEach = function( arr, cb, thisp ) {\n\t    return arr.forEach( cb, thisp );\n\t  };\n\t}\n\telse {\n\t  forEach = function(arr, cb, thisp) {\n\t    for (var i = 0; i < arr.length; i++) {\n\t      cb.call(thisp || arr, arr[i], i, arr);\n\t    }\n\t  }\n\t}\n\t\n\tvar isEmpty = function( obj ) {\n\t  for ( var key in obj ) {\n\t    if ( hasOwnProperty.call( obj, key ) ) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tfunction extract_attr( jsonml ) {\n\t  return isArray(jsonml)\n\t      && jsonml.length > 1\n\t      && typeof jsonml[ 1 ] === \"object\"\n\t      && !( isArray(jsonml[ 1 ]) )\n\t      ? jsonml[ 1 ]\n\t      : undefined;\n\t}\n\t\n\t\n\t\n\t/**\n\t *  renderJsonML( jsonml[, options] ) -> String\n\t *  - jsonml (Array): JsonML array to render to XML\n\t *  - options (Object): options\n\t *\n\t *  Converts the given JsonML into well-formed XML.\n\t *\n\t *  The options currently understood are:\n\t *\n\t *  - root (Boolean): wether or not the root node should be included in the\n\t *    output, or just its children. The default `false` is to not include the\n\t *    root itself.\n\t */\n\texpose.renderJsonML = function( jsonml, options ) {\n\t  options = options || {};\n\t  // include the root element in the rendered output?\n\t  options.root = options.root || false;\n\t\n\t  var content = [];\n\t\n\t  if ( options.root ) {\n\t    content.push( render_tree( jsonml ) );\n\t  }\n\t  else {\n\t    jsonml.shift(); // get rid of the tag\n\t    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n\t      jsonml.shift(); // get rid of the attributes\n\t    }\n\t\n\t    while ( jsonml.length ) {\n\t      content.push( render_tree( jsonml.shift() ) );\n\t    }\n\t  }\n\t\n\t  return content.join( \"\\n\\n\" );\n\t};\n\t\n\tfunction escapeHTML( text ) {\n\t  return text.replace( /&/g, \"&amp;\" )\n\t             .replace( /</g, \"&lt;\" )\n\t             .replace( />/g, \"&gt;\" )\n\t             .replace( /\"/g, \"&quot;\" )\n\t             .replace( /'/g, \"&#39;\" );\n\t}\n\t\n\tfunction render_tree( jsonml ) {\n\t  // basic case\n\t  if ( typeof jsonml === \"string\" ) {\n\t    return escapeHTML( jsonml );\n\t  }\n\t\n\t  var tag = jsonml.shift(),\n\t      attributes = {},\n\t      content = [];\n\t\n\t  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n\t    attributes = jsonml.shift();\n\t  }\n\t\n\t  while ( jsonml.length ) {\n\t    content.push( render_tree( jsonml.shift() ) );\n\t  }\n\t\n\t  var tag_attrs = \"\";\n\t  for ( var a in attributes ) {\n\t    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n\t  }\n\t\n\t  // be careful about adding whitespace here for inline elements\n\t  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n\t    return \"<\"+ tag + tag_attrs + \"/>\";\n\t  }\n\t  else {\n\t    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n\t  }\n\t}\n\t\n\tfunction convert_tree_to_html( tree, references, options ) {\n\t  var i;\n\t  options = options || {};\n\t\n\t  // shallow clone\n\t  var jsonml = tree.slice( 0 );\n\t\n\t  if ( typeof options.preprocessTreeNode === \"function\" ) {\n\t      jsonml = options.preprocessTreeNode(jsonml, references);\n\t  }\n\t\n\t  // Clone attributes if they exist\n\t  var attrs = extract_attr( jsonml );\n\t  if ( attrs ) {\n\t    jsonml[ 1 ] = {};\n\t    for ( i in attrs ) {\n\t      jsonml[ 1 ][ i ] = attrs[ i ];\n\t    }\n\t    attrs = jsonml[ 1 ];\n\t  }\n\t\n\t  // basic case\n\t  if ( typeof jsonml === \"string\" ) {\n\t    return jsonml;\n\t  }\n\t\n\t  // convert this node\n\t  switch ( jsonml[ 0 ] ) {\n\t    case \"header\":\n\t      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n\t      delete jsonml[ 1 ].level;\n\t      break;\n\t    case \"bulletlist\":\n\t      jsonml[ 0 ] = \"ul\";\n\t      break;\n\t    case \"numberlist\":\n\t      jsonml[ 0 ] = \"ol\";\n\t      break;\n\t    case \"listitem\":\n\t      jsonml[ 0 ] = \"li\";\n\t      break;\n\t    case \"para\":\n\t      jsonml[ 0 ] = \"p\";\n\t      break;\n\t    case \"markdown\":\n\t      jsonml[ 0 ] = \"html\";\n\t      if ( attrs ) delete attrs.references;\n\t      break;\n\t    case \"code_block\":\n\t      jsonml[ 0 ] = \"pre\";\n\t      i = attrs ? 2 : 1;\n\t      var code = [ \"code\" ];\n\t      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n\t      jsonml[ i ] = code;\n\t      break;\n\t    case \"inlinecode\":\n\t      jsonml[ 0 ] = \"code\";\n\t      break;\n\t    case \"img\":\n\t      jsonml[ 1 ].src = jsonml[ 1 ].href;\n\t      delete jsonml[ 1 ].href;\n\t      break;\n\t    case \"linebreak\":\n\t      jsonml[ 0 ] = \"br\";\n\t    break;\n\t    case \"link\":\n\t      jsonml[ 0 ] = \"a\";\n\t      break;\n\t    case \"link_ref\":\n\t      jsonml[ 0 ] = \"a\";\n\t\n\t      // grab this ref and clean up the attribute node\n\t      var ref = references[ attrs.ref ];\n\t\n\t      // if the reference exists, make the link\n\t      if ( ref ) {\n\t        delete attrs.ref;\n\t\n\t        // add in the href and title, if present\n\t        attrs.href = ref.href;\n\t        if ( ref.title ) {\n\t          attrs.title = ref.title;\n\t        }\n\t\n\t        // get rid of the unneeded original text\n\t        delete attrs.original;\n\t      }\n\t      // the reference doesn't exist, so revert to plain text\n\t      else {\n\t        return attrs.original;\n\t      }\n\t      break;\n\t    case \"img_ref\":\n\t      jsonml[ 0 ] = \"img\";\n\t\n\t      // grab this ref and clean up the attribute node\n\t      var ref = references[ attrs.ref ];\n\t\n\t      // if the reference exists, make the link\n\t      if ( ref ) {\n\t        delete attrs.ref;\n\t\n\t        // add in the href and title, if present\n\t        attrs.src = ref.href;\n\t        if ( ref.title ) {\n\t          attrs.title = ref.title;\n\t        }\n\t\n\t        // get rid of the unneeded original text\n\t        delete attrs.original;\n\t      }\n\t      // the reference doesn't exist, so revert to plain text\n\t      else {\n\t        return attrs.original;\n\t      }\n\t      break;\n\t  }\n\t\n\t  // convert all the children\n\t  i = 1;\n\t\n\t  // deal with the attribute node, if it exists\n\t  if ( attrs ) {\n\t    // if there are keys, skip over it\n\t    for ( var key in jsonml[ 1 ] ) {\n\t        i = 2;\n\t        break;\n\t    }\n\t    // if there aren't, remove it\n\t    if ( i === 1 ) {\n\t      jsonml.splice( i, 1 );\n\t    }\n\t  }\n\t\n\t  for ( ; i < jsonml.length; ++i ) {\n\t    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n\t  }\n\t\n\t  return jsonml;\n\t}\n\t\n\t\n\t// merges adjacent text nodes into a single node\n\tfunction merge_text_nodes( jsonml ) {\n\t  // skip the tag name and attribute hash\n\t  var i = extract_attr( jsonml ) ? 2 : 1;\n\t\n\t  while ( i < jsonml.length ) {\n\t    // if it's a string check the next item too\n\t    if ( typeof jsonml[ i ] === \"string\" ) {\n\t      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n\t        // merge the second string into the first and remove it\n\t        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n\t      }\n\t      else {\n\t        ++i;\n\t      }\n\t    }\n\t    // if it's not a string recurse\n\t    else {\n\t      merge_text_nodes( jsonml[ i ] );\n\t      ++i;\n\t    }\n\t  }\n\t}\n\t\n\t} )( (function() {\n\t  if ( false ) {\n\t    window.markdown = {};\n\t    return window.markdown;\n\t  }\n\t  else {\n\t    return exports;\n\t  }\n\t} )() );\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.a4dbd7512e6778f5e574.js","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!./../../node_modules/.1.0.1@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-00aca402!vue-loader/lib/selector?type=styles&index=0!./topic.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./topic.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-00aca402!vue-loader/lib/selector?type=template&index=0!./topic.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\nif(typeof __vue_options__.name === \"undefined\") {\n  __vue_options__.name = \"topic\"\n}__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/topic.vue\n// module id = 15\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.10.3@util/support/isBufferBrowser.js\n// module id = 18\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.10.3@util/util.js\n// module id = 19\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.11.9@process/browser.js\n// module id = 20\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/.0.25.0@css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".topic .right{float:right;margin-right:5px}.topic{font-family:microsoft yahei;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#2c3e50}.padding{padding:8px}.paddinglf{padding:0 8px}.topic .tab:before{width:50px;display:inline-block;border-radius:2px;text-align:center}.content blockquote{margin-left:10px;color:#777;padding:0 15px;border-left:4px solid #ddd}.content a{text-decoration:underline;word-break:break-all;display:inline-block}.topic img{width:100%}.reply .mu-icon{font-size:20px}.topic .uped{color:#03a9f4}.topic .tab{color:#fff}.topic .mu-raised-button{height:30px;min-width:20px;float:right;margin:0 8px 10px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/topic.vue\"],\"names\":[],\"mappings\":\"AACA,cACE,YAAa,AACb,gBAAkB,CACnB,AACD,OACE,4BAA+B,AAC/B,mCAAoC,AACpC,kCAAmC,AACnC,aAAe,CAChB,AACD,SACE,WAAc,CACf,AACD,WACE,aAAe,CAChB,AACD,mBACE,WAAY,AACZ,qBAAsB,AACtB,kBAAmB,AACnB,iBAAmB,CACpB,AACD,oBACE,iBAAkB,AAClB,WAAY,AACZ,eAAkB,AAClB,0BAA4B,CAC7B,AACD,WACE,0BAA2B,AAC3B,qBAAqB,AACrB,oBAAsB,CACvB,AACD,WACE,UAAY,CACb,AACD,gBACE,cAAgB,CACjB,AACD,aACE,aAAe,CAChB,AACD,YACE,UAAY,CACb,AACD,yBACE,YAAa,AACb,eAAgB,AAChB,YAAa,AACb,iBAAmB,CACpB\",\"file\":\"topic.vue\",\"sourcesContent\":[\"\\n.topic .right{\\n  float: right;\\n  margin-right: 5px;\\n}\\n.topic {\\n  font-family: 'microsoft yahei';\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  color: #2c3e50;\\n}\\n.padding{\\n  padding:  8px;\\n}\\n.paddinglf{\\n  padding: 0 8px;\\n}\\n.topic .tab:before{\\n  width: 50px;\\n  display: inline-block;\\n  border-radius: 2px;\\n  text-align: center;\\n}\\n.content blockquote{\\n  margin-left: 10px;\\n  color: #777;\\n  padding: 0px 15px;\\n  border-left: 4px solid #ddd;\\n}\\n.content a{\\n  text-decoration: underline;\\n  word-break:break-all;\\n  display: inline-block;\\n}\\n.topic img{\\n  width: 100%;\\n}\\n.reply .mu-icon{\\n  font-size: 20px;\\n}\\n.topic .uped{\\n  color: #03A9F4;\\n}\\n.topic .tab{\\n  color: #fff;\\n}\\n.topic .mu-raised-button{\\n  height: 30px;\\n  min-width: 20px;\\n  float: right;\\n  margin: 0 8px 10px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.25.0@css-loader?sourceMap!./~/.10.0.3@vue-loader/lib/style-rewriter.js?id=data-v-00aca402!./~/.10.0.3@vue-loader/lib/selector.js?type=styles&index=0!./src/views/topic.vue\n// module id = 21\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/.0.25.0@css-loader/index.js?sourceMap!./../../node_modules/.10.0.3@vue-loader/lib/style-rewriter.js?id=data-v-00aca402!./../../node_modules/.10.0.3@vue-loader/lib/selector.js?type=styles&index=0!./topic.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/.1.0.0@vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/.0.25.0@css-loader/index.js?sourceMap!./../../node_modules/.10.0.3@vue-loader/lib/style-rewriter.js?id=data-v-00aca402!./../../node_modules/.10.0.3@vue-loader/lib/selector.js?type=styles&index=0!./topic.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/.0.25.0@css-loader/index.js?sourceMap!./../../node_modules/.10.0.3@vue-loader/lib/style-rewriter.js?id=data-v-00aca402!./../../node_modules/.10.0.3@vue-loader/lib/selector.js?type=styles&index=0!./topic.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.1.0.1@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/.1.0.0@vue-style-loader!./~/.0.25.0@css-loader?sourceMap!./~/.10.0.3@vue-loader/lib/style-rewriter.js?id=data-v-00aca402!./~/.10.0.3@vue-loader/lib/selector.js?type=styles&index=0!./src/views/topic.vue\n// module id = 29\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"topic\"\n  }, [_c('mhead', {\n    attrs: {\n      \"theme\": \"主题\"\n    }\n  }), _vm._v(\" \"), (_vm.success) ? _c('div', {\n    staticClass: \"pt56\"\n  }, [_c('h2', {\n    staticClass: \"topic-title padding\",\n    domProps: {\n      \"textContent\": _vm._s(_vm.topic.title)\n    }\n  }), _vm._v(\" \"), _c('div', [_c('mu-raised-button', {\n    staticClass: \"demo-raised-button\",\n    attrs: {\n      \"label\": _vm.collected ? '取消收藏' : '收藏',\n      \"primary\": !_vm.collected,\n      \"secondary\": _vm.collected\n    },\n    on: {\n      \"click\": _vm.collect\n    }\n  })], 1), _vm._v(\" \"), _c('mu-flexbox', {\n    staticClass: \"padding\"\n  }, [_c('mu-flexbox-item', {\n    staticClass: \"flex-demo\",\n    attrs: {\n      \"grow\": \"1\"\n    }\n  }, [_c('router-link', {\n    attrs: {\n      \"to\": {\n        name: 'user',\n        params: {\n          loginname: _vm.topic.author.loginname\n        }\n      }\n    }\n  }, [_c('mu-avatar', {\n    attrs: {\n      \"src\": _vm.topic.author.avatar_url\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-flexbox-item', {\n    staticClass: \"flex-demo\",\n    attrs: {\n      \"grow\": \"7\"\n    }\n  }, [_c('mu-flexbox', [_c('mu-flexbox-item', {\n    staticClass: \"flex-demo\",\n    attrs: {\n      \"grow\": \"1\"\n    }\n  }, [_vm._v(\"\\n              \" + _vm._s(_vm.topic.author.loginname) + \"\\n            \")]), _vm._v(\" \"), _c('mu-flexbox-item', {\n    staticClass: \"flex-demo tab\",\n    attrs: {\n      \"grow\": \"1\",\n      \"title\": _vm.getTabInfo(_vm.topic.tab, _vm.topic.good, _vm.topic.top, true)\n    }\n  })], 1), _vm._v(\" \"), _c('mu-flexbox', [_c('mu-flexbox-item', {\n    staticClass: \"flex-demo\",\n    attrs: {\n      \"grow\": \"1\"\n    }\n  }, [_vm._v(\"\\n              发布于 \" + _vm._s(_vm._f(\"getTimeStr\")(_vm.topic.create_at)) + \"\\n            \")]), _vm._v(\" \"), _c('mu-flexbox-item', {\n    staticClass: \"flex-demo\",\n    attrs: {\n      \"grow\": \"1\"\n    }\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.topic.visit_count) + \"次浏览\\n            \")])], 1)], 1)], 1), _vm._v(\" \"), _c('section', {\n    staticClass: \"padding content\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.topic.content)\n    }\n  }), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('section', {\n    staticClass: \"allRepies padding\"\n  }, [_vm._v(\"\\n        共 \"), _c('span', {\n    staticClass: \"blue\"\n  }, [_vm._v(_vm._s(_vm.topic.reply_count) + \" \")]), _vm._v(\" 人回复\\n      \")]), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('section', {\n    staticClass: \"reply \"\n  }, [_vm._l((_vm.topic.replies), function(reply) {\n    return [_c('mu-flexbox', {\n      staticClass: \"padding\"\n    }, [_c('mu-flexbox-item', {\n      staticClass: \"flex-demo\",\n      attrs: {\n        \"grow\": \"1\"\n      }\n    }, [_c('router-link', {\n      attrs: {\n        \"to\": {\n          name: 'user',\n          params: {\n            loginname: reply.author.loginname\n          }\n        }\n      }\n    }, [_c('mu-avatar', {\n      attrs: {\n        \"src\": reply.author.avatar_url\n      }\n    })], 1)], 1), _vm._v(\" \"), _c('mu-flexbox-item', {\n      staticClass: \"flex-demo\",\n      attrs: {\n        \"grow\": \"7\"\n      }\n    }, [_c('mu-flexbox', [_c('mu-flexbox-item', {\n      staticClass: \"flex-demo\",\n      attrs: {\n        \"grow\": \"2\"\n      }\n    }, [_vm._v(\"\\n                \" + _vm._s(reply.author.loginname) + \" 发布于 \" + _vm._s(_vm._f(\"getTimeStr\")(reply.create_at)) + \"\\n                \")]), _vm._v(\" \"), _c('mu-flexbox-item', {\n      staticClass: \"flex-demo\",\n      attrs: {\n        \"grow\": \"1\"\n      }\n    }, [_c('span', {\n      staticClass: \"right\",\n      on: {\n        \"click\": function($event) {\n          _vm.replyTo(reply)\n        }\n      }\n    }, [_c('mu-icon', {\n      attrs: {\n        \"value\": \"reply\"\n      },\n      slot: \"left\"\n    })], 1), _vm._v(\" \"), _c('span', {\n      staticClass: \"right\"\n    }, [_vm._v(_vm._s(reply.ups.length))]), _vm._v(\" \"), _c('span', {\n      staticClass: \"right\",\n      class: {\n        'uped': _vm.isUped(reply.ups)\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.upTo(reply)\n        }\n      }\n    }, [_c('mu-icon', {\n      attrs: {\n        \"value\": \"thumb_up\"\n      },\n      slot: \"left\"\n    })], 1)])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n      staticClass: \"paddinglf\",\n      domProps: {\n        \"innerHTML\": _vm._s(reply.content)\n      }\n    }), _vm._v(\" \"), _c('section', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (_vm.userId && _vm.curReplyId === reply.id),\n        expression: \"userId && curReplyId === reply.id\"\n      }],\n      staticClass: \"padding\"\n    }, [_c('mu-text-field', {\n      directives: [{\n        name: \"model\",\n        rawName: \"v-model\",\n        value: (_vm.replyContTo),\n        expression: \"replyContTo\"\n      }],\n      attrs: {\n        \"multiLine\": \"\",\n        \"rows\": 6,\n        \"rowsMax\": 6,\n        \"maxLength\": 500,\n        \"fullWidth\": \"\"\n      },\n      domProps: {\n        \"value\": (_vm.replyContTo)\n      },\n      on: {\n        \"input\": function($event) {\n          _vm.replyContTo = $event\n        }\n      }\n    }), _vm._v(\" \"), _c('mu-raised-button', {\n      staticClass: \"demo-raised-button\",\n      attrs: {\n        \"label\": \"确认\",\n        \"fullWidth\": \"\",\n        \"primary\": \"\"\n      },\n      on: {\n        \"click\": _vm.replyAct\n      }\n    })], 1), _vm._v(\" \"), _c('mu-divider')]\n  })], 2), _vm._v(\" \"), (_vm.userId) ? _c('section', {\n    staticClass: \"padding\"\n  }, [_c('mu-text-field', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.replyCont),\n      expression: \"replyCont\"\n    }],\n    attrs: {\n      \"hintText\": \"回复内容\",\n      \"multiLine\": \"\",\n      \"rows\": 6,\n      \"rowsMax\": 6,\n      \"maxLength\": 500,\n      \"fullWidth\": \"\"\n    },\n    domProps: {\n      \"value\": (_vm.replyCont)\n    },\n    on: {\n      \"input\": function($event) {\n        _vm.replyCont = $event\n      }\n    }\n  }), _vm._v(\" \"), _c('mu-raised-button', {\n    staticClass: \"demo-raised-button\",\n    attrs: {\n      \"label\": \"确认\",\n      \"fullWidth\": \"\",\n      \"primary\": \"\"\n    },\n    on: {\n      \"click\": _vm.replyAct\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c('totop', {\n    attrs: {\n      \"page\": \"topic\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (!_vm.success) ? _c('div', {\n    staticClass: \"error\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": require(\"../assets/imgs/loading.gif\"),\n      \"alt\": \"\"\n    }\n  })]) : _vm._e(), _vm._v(\" \"), (_vm.toast) ? _c('mu-snackbar', {\n    attrs: {\n      \"message\": _vm.successTxt\n    }\n  }) : _vm._e()], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.10.0.3@vue-loader/lib/template-compiler.js?id=data-v-00aca402!./~/.10.0.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/topic.vue\n// module id = 40\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.0.1@inherits/inherits_browser.js\n// module id = 51\n// module chunks = 0","<template>\r\n\t<div class=\"topic\">\r\n    <mhead theme=\"主题\"></mhead>\r\n    <div class=\"pt56\" v-if=\"success\">\r\n      <h2 class=\"topic-title padding\" v-text=\"topic.title\"></h2>\r\n\r\n      <div><mu-raised-button :label=\"collected?'取消收藏':'收藏'\" class=\"demo-raised-button\" :primary=\"!collected\" :secondary=\"collected\" @click=\"collect\"/></div>\r\n\r\n      <mu-flexbox class=\"padding\">\r\n        <mu-flexbox-item grow=\"1\" class=\"flex-demo\">\r\n          <router-link :to=\"{name:'user',params:{loginname:topic.author.loginname}}\">\r\n            <mu-avatar :src=\"topic.author.avatar_url\"/>\r\n          </router-link>\r\n        </mu-flexbox-item>\r\n        <mu-flexbox-item grow=\"7\" class=\"flex-demo\">\r\n          <mu-flexbox>\r\n            <mu-flexbox-item grow=\"1\" class=\"flex-demo\">\r\n              {{topic.author.loginname}}\r\n            </mu-flexbox-item>\r\n            <mu-flexbox-item grow=\"1\" class=\"flex-demo tab\" :title=\"getTabInfo(topic.tab,topic.good,topic.top,true)\">\r\n            \r\n            </mu-flexbox-item>\r\n          </mu-flexbox>\r\n          <mu-flexbox>\r\n            <mu-flexbox-item grow=\"1\" class=\"flex-demo\">\r\n              发布于 {{topic.create_at | getTimeStr}}\r\n            </mu-flexbox-item>\r\n            <mu-flexbox-item grow=\"1\" class=\"flex-demo\">\r\n            {{topic.visit_count}}次浏览\r\n            </mu-flexbox-item>\r\n          </mu-flexbox>\r\n        </mu-flexbox-item>\r\n      </mu-flexbox>\r\n      <section class='padding content' v-html=\"topic.content\">\r\n      </section>\r\n      <mu-divider />\r\n      <section class=\"allRepies padding\">\r\n        共 <span class=\"blue\">{{topic.reply_count}} </span> 人回复\r\n      </section>\r\n      <mu-divider />\r\n      <section class=\"reply \">\r\n\r\n        <template v-for=\"reply in topic.replies\">\r\n          <mu-flexbox class=\"padding\">\r\n            <mu-flexbox-item grow=\"1\" class=\"flex-demo\">\r\n              <router-link :to=\"{name:'user',params:{loginname:reply.author.loginname}}\">\r\n                <mu-avatar :src=\"reply.author.avatar_url\"/>\r\n              </router-link>\r\n            </mu-flexbox-item>\r\n            <mu-flexbox-item grow=\"7\" class=\"flex-demo\">\r\n              <mu-flexbox>\r\n                <mu-flexbox-item grow=\"2\" class=\"flex-demo\">\r\n                {{reply.author.loginname}} 发布于 {{reply.create_at|getTimeStr}}\r\n                </mu-flexbox-item>\r\n                <mu-flexbox-item grow=\"1\" class=\"flex-demo\">\r\n                  <span class=\"right\" @click=\"replyTo(reply)\">\r\n                    <mu-icon slot=\"left\" value=\"reply\"/>\r\n                  </span>\r\n                  <span class=\"right\">{{reply.ups.length}}</span>\r\n                  <span class=\"right\" @click=\"upTo(reply)\" :class=\"{'uped':isUped(reply.ups)}\">\r\n                    <mu-icon slot=\"left\" value=\"thumb_up\"/>\r\n                  </span>\r\n                </mu-flexbox-item>\r\n              </mu-flexbox>\r\n            </mu-flexbox-item>\r\n          </mu-flexbox>\r\n          <div class=\"paddinglf\" v-html=\"reply.content\"></div>\r\n          \r\n          <section class=\"padding\" v-show=\"userId && curReplyId === reply.id\">\r\n            <mu-text-field v-model=\"replyContTo\" multiLine :rows=\"6\" :rowsMax=\"6\" :maxLength=\"500\" fullWidth />\r\n            <mu-raised-button label=\"确认\" class=\"demo-raised-button\" @click=\"replyAct\" fullWidth primary/>\r\n          </section>\r\n\r\n          <mu-divider />\r\n        </template>\r\n\r\n      </section>\r\n      \r\n      <section class=\"padding\" v-if=\"userId\">\r\n        <mu-text-field hintText=\"回复内容\" v-model=\"replyCont\" multiLine :rows=\"6\" :rowsMax=\"6\" :maxLength=\"500\" fullWidth />\r\n        <mu-raised-button label=\"确认\" class=\"demo-raised-button\" @click=\"replyAct\" fullWidth primary/>\r\n      </section>\r\n      <totop page=\"topic\"></totop>\r\n    </div>\r\n    <div class=\"error\" v-if=\"!success\">\r\n      <img src=\"../assets/imgs/loading.gif\" alt=\"\">\r\n    </div>\r\n    <mu-snackbar v-if=\"toast\" :message=\"successTxt\"/>\r\n\r\n  </div>\r\n  \t\r\n</template>\r\n\r\n<script>\r\n  import $ from 'webpack-zepto';\r\n  import mhead from '../components/mhead';\r\n  import totop from '../components/toTop';\r\n  import {getTabInfo,getTimeStr} from '../filters';\r\n  const markdown = require('markdown').markdown;\r\n\r\n  export default {\r\n    name: 'app',\r\n    components: {\r\n      mhead,totop\r\n    },\r\n    filters :{\r\n        getTimeStr(time){\r\n          return getTimeStr(time);\r\n        }\r\n      },\r\n    data () {\r\n      return {\r\n        topicId: '',\r\n        topic:{},\r\n        success:false,\r\n        userId:'',\r\n        curReplyId: '',\r\n        replyCont:'',\r\n        replyContTo:'',\r\n        token:'',\r\n        authorTxt: `---from [Vue + Muse-UI](https://github.com/mov1er/cnode-code)`,\r\n        successTxt:'',\r\n        toast: false,\r\n        collected:false\r\n      }\r\n    },\r\n    mounted () {\r\n      // 获取url传的tab参数\r\n      this.topicId = this.$route.params.id;\r\n      this.userId=this.$store.state.user.userInfo.userId;\r\n      this.token=this.$store.state.user.userInfo.token;\r\n      // 加载主题数据\r\n      $.get('https://cnodejs.org/api/v1/topic/' + this.topicId, (d) => {\r\n        if (d && d.data) {\r\n          this.topic = d.data;\r\n          this.success=true;\r\n        } \r\n      });\r\n\r\n    },\r\n    methods:{\r\n      getTabInfo(tab, good, top, isClass) {\r\n        return getTabInfo(tab, good, top, isClass);\r\n      },\r\n      replyTo(reply){\r\n        if (!this.userId) {\r\n          this.$router.push({\r\n            name: 'login',\r\n            params: {\r\n              redirect: encodeURIComponent(this.$route.path)\r\n            }\r\n          });\r\n        } else {\r\n          this.curReplyId=reply.id;\r\n          this.replyContTo=`@${reply.author.loginname} `;\r\n        }\r\n      },\r\n      replyAct(){\r\n          let postData={\r\n            accesstoken: this.token\r\n          }\r\n          let htmlText = this.authorTxt; \r\n          if(this.curReplyId){\r\n            postData.reply_id = this.curReplyId;\r\n            postData.content=this.replyContTo+`     `+htmlText;\r\n          }else{\r\n            postData.content=this.replyCont+`     `+htmlText;\r\n          }\r\n          console.log(postData)\r\n          // return\r\n          $.ajax({\r\n            type: 'POST',\r\n            url: `https://cnodejs.org/api/v1/topic/${this.topicId}/replies`,\r\n            data: postData,\r\n            dataType: 'json',\r\n            success: (res) => {\r\n              if (res.success) {\r\n                this.toast = true;\r\n                this.successTxt=\"回复成功，即将跳转\";\r\n                if (this.toastTimer) clearTimeout(this.toastTimer)\r\n                this.toastTimer = setTimeout(() => { \r\n                  this.toast = false;\r\n                  history.go(0)\r\n                }, 2000)\r\n              }\r\n            },\r\n            error: (res) => {\r\n              let error = JSON.parse(res.responseText);\r\n              this.toast = true;\r\n              this.successTxt=error.error_msg;\r\n              if (this.toastTimer) clearTimeout(this.toastTimer)\r\n              this.toastTimer = setTimeout(() => { \r\n                this.toast = false;\r\n                history.go(0)\r\n              }, 2000)\r\n            }\r\n          });\r\n      },\r\n      upTo(reply){\r\n        if (!this.userId) {\r\n          this.$router.push({\r\n            name: 'login',\r\n            params: {\r\n              redirect: encodeURIComponent(this.$route.path)\r\n            }\r\n          });\r\n        } else {\r\n          $.ajax({\r\n            type: 'POST',\r\n            url: `https://cnodejs.org/api/v1/reply/${reply.id}/ups`,\r\n            data: {accesstoken: this.token},\r\n            dataType: 'json',\r\n            success: (res) => {\r\n              if (res.success) {\r\n                if (res.action === 'down') {\r\n                  let index = $.inArray(this.userId, reply.ups);\r\n                  reply.ups.splice(index, 1);\r\n                } else {\r\n                  reply.ups.push(this.userId);\r\n                }\r\n              }\r\n            },\r\n              error: (res) => {\r\n                let error = JSON.parse(res.responseText);\r\n                alert(error.error_msg);\r\n                return false;\r\n              }\r\n            });\r\n        }\r\n      },\r\n      isUped(ups){\r\n        return $.inArray(this.userId, ups) >= 0;\r\n      },\r\n      collect(){\r\n        this.collected=!this.collected\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"\">\r\n  .topic .right{\r\n    float: right;\r\n    margin-right: 5px;\r\n  }\r\n  .topic {\r\n    font-family: 'microsoft yahei';\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    color: #2c3e50;\r\n  }\r\n  .padding{\r\n    padding:  8px;\r\n  }\r\n  .paddinglf{\r\n    padding: 0 8px;\r\n  }\r\n  .topic .tab:before{\r\n    width: 50px;\r\n    display: inline-block;\r\n    border-radius: 2px;\r\n    text-align: center;\r\n  }\r\n  .content blockquote{\r\n    margin-left: 10px;\r\n    color: #777;\r\n    padding: 0px 15px;\r\n    border-left: 4px solid #ddd;\r\n  }\r\n  .content a{\r\n    text-decoration: underline;\r\n    word-break:break-all;\r\n    display: inline-block;\r\n  }\r\n  .topic img{\r\n    width: 100%;\r\n  }\r\n  .reply .mu-icon{\r\n    font-size: 20px;\r\n  }\r\n  .topic .uped{\r\n    color: #03A9F4;\r\n  }\r\n  .topic .tab{\r\n    color: #fff;\r\n  }\r\n  .topic .mu-raised-button{\r\n    height: 30px;\r\n    min-width: 20px;\r\n    float: right;\r\n    margin: 0 8px 10px;\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// topic.vue?38655e2a","// super simple module for the most common nodejs use case.\nexports.markdown = require(\"./markdown\");\nexports.parse = exports.markdown.toHTML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/markdown/lib/index.js\n// module id = 69\n// module chunks = 0","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if ( dialect in Markdown.dialects ) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n};\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n};\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n};\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n};\n\n// For Spidermonkey based engines\nfunction mk_block_toSource() {\n  return \"Markdown.mk_block( \" +\n          uneval(this.toString()) +\n          \", \" +\n          uneval(this.trailing) +\n          \", \" +\n          uneval(this.lineNumber) +\n          \" )\";\n}\n\n// node\nfunction mk_block_inspect() {\n  var util = require(\"util\");\n  return \"Markdown.mk_block( \" +\n          util.inspect(this.toString()) +\n          \", \" +\n          util.inspect(this.trailing) +\n          \", \" +\n          util.inspect(this.lineNumber) +\n          \" )\";\n\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.inspect = mk_block_inspect;\n  s.toSource = mk_block_toSource;\n\n  if ( line != undefined )\n    s.lineNumber = line;\n\n  return s;\n};\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;\n  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n  // [\\s\\S] matches _anything_ (newline or space)\n  // [^] is equivalent but doesn't work in IEs.\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) !== null ) {\n    if (m[2] == \"\\n#\") {\n      m[2] = \"\\n\";\n      re.lastIndex--;\n    }\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n};\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n};\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n};\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root ) {\n      this.tree = old_tree;\n    }\n  }\n};\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if ( typeof print !== \"undefined\" )\n      print.apply( print, args );\n  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null ) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n};\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      if ( !block.match( re ) ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\n        if ( b.length ) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if ( next.length ) {\n          // Check the next block - it might be code too\n          if ( !next[0].match( re ) ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\n          block = next.shift();\n        }\n        else {\n          break block_search;\n        }\n      } while ( true );\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d+\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if ( loose ) {\n          li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if ( nl && li.length > 1 ) inline.unshift(nl);\n\n        for ( var i = 0; i < inline.length; i++ ) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          else {\n            break;\n          }\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n          return;\n        }\n        if ( i + 1 == stack.length ) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ],\n            i;\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while ( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = false;\n                for ( i = 0; i < stack.length; i++ ) {\n                  if ( stack[ i ].indent != m[1] ) continue;\n                  list = stack[ i ].list;\n                  stack.splice( i+1, stack.length - (i+1) );\n                  found = true;\n                  break;\n                }\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if ( wanted_depth <= stack.length ) {\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if ( l.length > m[0].length ) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if ( contained.length > 0 ) {\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if ( hr ) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      };\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any. I.e. in this case:\n      //\n      //  a\n      //  > b\n      //\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [],\n            line_no = block.lineNumber;\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n            line_no++;\n        }\n\n        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n        // reassemble new block of just block quotes!\n        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n      }\n\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, \"\" ),\n          old_tree = this.tree,\n          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n          attr = extract_attr( processedBlock );\n\n      // If any link references were found get rid of them\n      if ( attr && attr.references ) {\n        delete attr.references;\n        // And then remove the attribute object if it's empty\n        if ( isEmpty( attr ) ) {\n          processedBlock.splice( 1, 1 );\n        }\n      }\n\n      jsonml.push( processedBlock );\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if ( m[4] !== undefined )\n          ref.title = m[4];\n        else if ( m[5] !== undefined )\n          ref.title = m[5];\n\n      } );\n\n      if ( b.length )\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n};\n\nMarkdown.dialects.Gruber.inline = {\n\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n      var m,\n          res,\n          lastIndex = 0;\n\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\n      m = re.exec( text );\n      if (!m) {\n        // Just boring text\n        return [ text.length, text ];\n      }\n      else if ( m[1] ) {\n        // Some un-interesting text matched. Return that first\n        return [ m[1].length, m[1] ];\n      }\n\n      var res;\n      if ( m[2] in this.dialect.inline ) {\n        res = this.dialect.inline[ m[2] ].call(\n                  this,\n                  text.substr( m.index ), m, previous_nodes || [] );\n      }\n      // Default for now to make dev easier. just slurp special and output it.\n      res = res || [ m[2].length, m[2] ];\n      return res;\n    },\n\n    __call__: function inline( text, patterns ) {\n\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( text.length > 0 ) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n        text = text.substr( res.shift() );\n        forEach(res, add )\n      }\n\n      return out;\n    },\n\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function () {},\n    \"}\": function () {},\n\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( this.dialect.inline.__escape__.exec( text ) )\n        return [ 2, text.charAt( 1 ) ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n\n      var orig = String(text);\n      // Inline content is possible inside `link text`\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\n      // No closing ']' found. Just consume the [\n      if ( !res ) return [ 1, \"[\" ];\n\n      var consumed = 1 + res[ 0 ],\n          children = res[ 1 ],\n          link,\n          attrs;\n\n      // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n      text = text.substr( consumed );\n\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n      if ( m ) {\n        var url = m[1];\n        consumed += m[0].length;\n\n        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n          url = url.substring( 1, url.length - 1 );\n\n        // If there is a title we don't have to worry about parens in the url\n        if ( !m[3] ) {\n          var open_parens = 1; // One open that isn't in the capture\n          for ( var len = 0; len < url.length; len++ ) {\n            switch ( url[len] ) {\n            case \"(\":\n              open_parens++;\n              break;\n            case \")\":\n              if ( --open_parens == 0) {\n                consumed -= url.length - len;\n                url = url.substring(0, len);\n              }\n              break;\n            }\n          }\n        }\n\n        // Process escapes only\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\n        attrs = { href: url || \"\" };\n        if ( m[3] !== undefined)\n          attrs.title = m[3];\n\n        link = [ \"link\", attrs ].concat( children );\n        return [ consumed, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\n      if ( m ) {\n\n        consumed += m[ 0 ].length;\n\n        // [links][] uses links as its reference\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\n        link = [ \"link_ref\", attrs ].concat( children );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [ consumed, link ];\n      }\n\n      // [id]\n      // Only if id is plain (no formatting.)\n      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n        link = [ \"link_ref\", attrs, children[0] ];\n        return [ consumed, link ];\n      }\n\n      // Just consume the \"[\"\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n};\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if ( this[state_slot][0] == md ) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if ( last instanceof CloseTag ) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  }; // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n};\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    // __foo__ is reserved and not a pattern\n    if ( i.match( /^__.*__$/) ) continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  d.__patterns__ = patterns;\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if ( pattern != undefined ) {\n      return fn.call(this, text, pattern);\n    }\n    else\n    {\n      return fn.call(this, text, patterns);\n    }\n  };\n};\n\nMarkdown.DialectHelpers = {};\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n  var consumed = 0,\n      nodes = [];\n\n  while ( true ) {\n    if ( text.charAt( consumed ) == want ) {\n      // Found the character we were looking for\n      consumed++;\n      return [ consumed, nodes ];\n    }\n\n    if ( consumed >= text.length ) {\n      // No closing char found. Abort.\n      return null;\n    }\n\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n    consumed += res[ 0 ];\n    // Add any returned nodes.\n    nodes.push.apply( nodes, res.slice( 1 ) );\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {}\n  Block.prototype = d.block;\n  function Inline() {}\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n};\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr[\"class\"] ) {\n        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr[\"class\"] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /\\=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /\\=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n};\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\n  var hash;\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ];\n    hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n};\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n      list = [ \"dl\" ],\n      i, m;\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n};\n\n// splits on unescaped instances of @ch. If @ch is not a character the result\n// can be unpredictable\n\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\n    var _split_on_unescaped = function(s, ch) {\n        ch = ch || '\\\\s';\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n        var res = [ ],\n            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n            m;\n        while(m = s.match(r)) {\n            res.push(m[1]);\n            s = m[2];\n        }\n        res.push(s);\n        return res;\n    }\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i, m;\n    if (m = block.match(leading_pipe)) {\n        // remove leading pipes in contents\n        // (header and horizontal rule already have the leading pipe left out)\n        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (! ( m = block.match(no_leading_pipe))) {\n        return undefined;\n    }\n\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\n    // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\n    // process alignment\n    var html_attrs = [ ];\n    forEach (m[2], function (s) {\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n        else                              html_attrs.push({});\n    });\n\n    // now for the header, avoid escaped pipes\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n    for (i = 0; i < m[1].length; i++) {\n        table[1][1].push(['th', html_attrs[i] || {}].concat(\n            this.processInline(m[1][i].trim())));\n    }\n\n    // now for body contents\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n        var html_row = ['tr'];\n        row = _split_on_unescaped(row, '|');\n        for (i = 0; i < row.length; i++) {\n            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n        }\n        table[2].push(html_row);\n    }, this);\n\n    return [table];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n};\n\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n};\n\nvar forEach;\n// Don't mess with Array.prototype. Its not friendly\nif ( Array.prototype.forEach ) {\n  forEach = function( arr, cb, thisp ) {\n    return arr.forEach( cb, thisp );\n  };\n}\nelse {\n  forEach = function(arr, cb, thisp) {\n    for (var i = 0; i < arr.length; i++) {\n      cb.call(thisp || arr, arr[i], i, arr);\n    }\n  }\n}\n\nvar isEmpty = function( obj ) {\n  for ( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\n\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n};\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( render_tree( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n    return \"<\"+ tag + tag_attrs + \"/>\";\n  }\n  else {\n    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n  }\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  var i;\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if ( typeof options.preprocessTreeNode === \"function\" ) {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[ 0 ] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n    case \"img_ref\":\n      jsonml[ 0 ] = \"img\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.src = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n        i = 2;\n        break;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      merge_text_nodes( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/markdown/lib/markdown.js\n// module id = 70\n// module chunks = 0"],"sourceRoot":""}